```{r}
#| include: false
#| label: module-3-first-chunk
```

## Data Science {.nostretch .smaller}

::: {style="font-size: 0.8em"}
> Data science is the study of the generalizable extraction of knowledge from data [@dhar2023].

For some, data science is just statistics [@broman2013] (_hype statistics_). For others, it's a new interdisciplinary field that synthesizes statistics, informatics, computing, communication, management, and sociology [@cao2017].
:::

![](images/wickham-2023-figure-1.png){fig-align="center" style="width: 85%; padding-top: 10px;"}

::: footer
(Reproduced from @wickham2023e)
:::

::: {.notes}
:::

## First Things First {.smaller}

You only analyze or visualize data when you already have clean, tidy, and validated data.

The processing for getting data ready for analysis is called **data munging**. You cans also see it as **data wrangling** (usually when dealing with models) or, simply, **data cleaning**.

::: {style="padding-top: 25px;"}
> Data scientists, according to interviews and expert estimates, spend **from 50 percent to 80 percent of their time mired in this more mundane labor of collecting and preparing unruly digital data**, before it can be explored for useful nuggets [@lohr2014].
:::

::: {.notes}
:::

## What Is Data After All? {.smaller}

[Ackoff's DIKW pyramid](https://en.wikipedia.org/wiki/DIKW_pyramid)

**Data** < **Information** < **Knowledge** < **Wisdom**

Data _versus_ the interpretation of the data

![](images/dikw-drawing.jpeg){fig-align="center" style="padding-top: 25px;"}

::: footer
(To learn more see: @ackoff1989 and @rowley2007)
:::

::: {.notes}
:::

## What Is Data After All? {.smaller}

Data is an abstraction. It's a representation of the world around us. Without context, it has no meaning.

![](images/picasso-1946-the-bull.jpg){fig-align="center" style="padding-top: 10px; padding-bottom: 10px;"}

::: footer
(Artwork by Pablo Picasso – [*Le Taureau*](https://en.wikipedia.org/wiki/Le_Taureau) (1945-46))
:::

::: {.notes}
:::

## Statistical Value Chain {.smaller}

> A value chain, roughly, consists of a sequence of activities that increase the value of a product step by step. [...] One should realize that although the schema nicely organizes data analysis activities, in practice, the process is hardly linear [@vanderloo2018].

![](images/statistical-value-chain.png){fig-align="center" style="width: 90%; padding-top: 25px;"}

::: footer
(Reproduced from @vanderloo2018)
:::

::: {.notes}
:::

## Raw Data {.smaller}

:::: {.columns}
::: {.column style="width: 50%; font-size: 0.9em;"}
> With raw data, we mean the data as it arrives at the desk of the analyst. The state of such data may of course vary enormously, depending on the data source. [@vanderloo2018].

> If the researcher has made any modifications to the raw data, it is not the raw form of the data. [@ellis2018].
:::
::: {.column style="width: 50%;"}
![](images/raw-data.png){fig-align="center" style="width: 100%; padding-top: 75px;"}
:::
::::

::: footer
(Photo by Unknown Author)
:::

::: {.notes}
:::

## Valid Data {.smaller}

Data validation techniques are used to ensure that data is accurate, consistent, and reliable.

::: {style="padding-top: 10px;"}
**Examples**

- Impossible values (e.g., negative age);
- Inconsistent values (e.g., a person with a height of 2 meters and a weight of 20 kg);
- Improbable values (e.g., a person 200 years old);
- Duplicated values (e.g., the same person with two different ages).
:::

::: {.notes}
:::

## Tidy Data {.smaller}

![](images/allison-horst-figure-13.jpg){fig-align="center" style="width: 100%;"}

::: footer
(Artwork by [Allison Horst](https://allisonhorst.com/horst-hill-collaborations))
:::

## Tidy Data {.smaller}

![](images/allison-horst-figure-14.jpg){fig-align="center" style="width: 100%;"}

::: footer
(Artwork by [Allison Horst](https://allisonhorst.com/horst-hill-collaborations))
:::

## Untidy to Tidy {.smaller}

![](images/wickham-2023-figure-5-3.png){fig-align="center" style="width: 100%;"}

::: footer
(Reproduced from @wickham2023e)
:::

## Tidy Data

![](images/allison-horst-figure-15.jpg){fig-align="center" style="width: 100%;"}

::: footer
(Artwork by [Allison Horst](https://allisonhorst.com/horst-hill-collaborations))
:::

## Tabular Data {.smaller}

:::: {.columns}
::: {.column style="width: 50%; text-align: center;"}
2023
: 34 cols $\times$ 50,544,073 rows<br>1,718,498,482 data points.

2022
: 34 cols $\times$ 45,862,105 rows<br>1,559,311,570 data points.

2021
: 34 cols $\times$ 29,853,217 rows<br>1,015,009,378 data points.

2020
: 34 cols $\times$ 22,720,515 rows<br>772,497,510 data points.
:::
::: {.column style="width: 50%;"}
![](images/sisvan-logo.png){fig-align="center" style="width: 75%; padding-top: 50px;"}
:::
::::

::: {.notes}
:::

## Hierarchical Data {.smaller}

::::: {.columns}
:::: {.column style="width: 47.5%;"}
Data can be hierarchical, with multiple levels of organization.

::: {style="font-size: 0.8em; font-style: italic; padding-top: 200px;"}
Interest rate representing the adjusted average rate of overnight repurchase agreements backed by Brazil's federal government securities held in the Special System for Settlement and Custody ([SELIC](https://dadosabertos.bcb.gov.br/dataset/11-taxa-de-juros---selic)). Reported in % per day.
:::
::::
:::: {.column style="width: 5%;"}
::::
:::: {.column style="width: 47.5%;"}
```{r}
#| eval: false

library(jsonlite)

paste0(
  "https://api.bcb.gov.br/dados/serie/",
  "bcdata.sgs.11", "/",
  "dados", "?",
  "formato=json", "&",
  "dataInicial=01/12/2024", "&",
  "dataFinal=03/12/2024"
) |>
  read_json()
#> [[1]]
#> [[1]]$data
# [1] "02/12/2024"

# [[1]]$valor
# [1] "0.041957"


# [[2]]
# [[2]]$data
# [1] "03/12/2024"

# [[2]]$valor
# [1] "0.041957"
```
::::
:::::

## Spatial Data {.smaller}

::::: {.columns}
:::: {.column style="width: 60%;"}
![](images/worldclim-logo.png){style="width: 40%;"}

Not all data is tabular; spatial data can be very large and complex.

Excel cannot handle spatial data, and GUI-based statistical softwares, when capable of handling spatial data, are often limited and struggles with performance issues.

::: {style="font-size: 0.8em; font-style: italic; padding-top: 50px;"}
Projected monthly average maximum temperatures (°C) for June 2021–2040, based on the global climate model (GCM) ACCESS-CM2.
:::
::::
:::: {.column style="width: 40%; padding-top: 30px;"}
![](images/vartanian-2024-figure-2.png){fig-align="center" style="width: 100%;"}
::::
:::::

::: footer
([WorldClim 2.1 data](https://worldclim.org/data/worldclim21.html). June mean temperature (°C) in South America (1970-2000))
:::

::: {.notes}
:::

## Spreadsheet Syndrome {.smaller}

:::: {.columns}
::: {.column style="width: 50%;"}
Spreadsheet syndrome is a term used to describe the problems that arise from using spreadsheets to manage data.
:::
::: {.column style="width: 50%;"}
![](images/spreadsheet-syndrome.png){fig-align="center" style="width: 100%; padding-top: 60px;"}
:::
::::

::: footer
(Figure by 9Dots Management)
:::

## Relational Databases {.nostretch .smaller}

::: {style="font-size: 0.7em"}
> Developed by [E. F. Codd](https://en.wikipedia.org/wiki/Edgar_F._Codd) of IBM in 1970, the relational model is based on mathematical [set theory](https://en.wikipedia.org/wiki/Set_theory) and represents data as independent relations. Each relation (table) is conceptually represented as a two-dimensional structure of intersecting rows and columns. The relations are related to each other through the sharing of common entity characteristics (values in columns) [@coronel2019].
:::

![](images/relational-database.png){fig-align="center" style="width: 80%; padding-top: 10px;"}

## Data Documentation {visibility="uncounted"}

Documentation is essential for data sharing and reproducibility

Data dictionaries/Codebooks (e.g., [SISVAN](https://s3.sa-east-1.amazonaws.com/ckan.saude.gov.br/SISVAN/estado_nutricional/Dicionário+de+Dados+-+Estado+Nutricional.pdf))

[Guide to Writing “README” Style Metadata](https://data.research.cornell.edu/data-management/sharing/readme/).

[Metadata Standards Catalog](https://rdamsc.bath.ac.uk/)

[Data Documentation Initiative (DDI)](https://ddialliance.org/)

## The Codebook {.nostretch}

![](images/ellis-2018-figure-1.jpg){fig-align="center" style="width: 80%;"}

::: footer
(Reproduced from @ellis2018)
:::

## Open Data Formats {.smaller}

There are many open data formats available for researchers to use. *Open* can mean different things, but in this context, it means that the format is not proprietary and can be used by anyone. Here are some examples:

::: {style="text-align: center; font-weight: bold; color: #ED6B4D; padding-top: 10px; padding-bottom: 20px;"}
⚠️ **Excel files are not a open data format!** ⚠️
:::

:::: {.columns stye="padding-top: 15px;"}
::: {.column style="width: 47.5%;"}
**Tabular Data**

- [Comma-Separated Values (CSV)](https://en.wikipedia.org/wiki/Comma-separated_values)
- [R Data Serialization (RDS)]()
- [Apache Parquet](https://en.wikipedia.org/wiki/Apache_Parquet)
:::
::: {.column style="width: 5%;"}
:::
::: {.column style="width: 47.5%;"}
**Hierarchical Data**

- [JSON](https://en.wikipedia.org/wiki/JSON)
- [YAML](https://en.wikipedia.org/wiki/YAML)
- [TOML](https://en.wikipedia.org/wiki/TOML)
- [XML](https://en.wikipedia.org/wiki/XML)
:::
::::

::: {.notes}
:::

## How to Read Data in R {.smaller}

It will depend on what king of data you are working with.

Different from Excel or GUI-based statistical software, R can deal with any kind of data.

- Tabular data: `utils::read.csv()`, `readr::read_csv()`
- Geographical data: `terra::vect()`, `st::st_read()`
- Proprietary formats: `readxl::read_excel()`, `haven::read_dta()` (Stata), `haven::read_sav()` (SPSS), `haven::read_sas()` (SAS)

::: {.notes}
:::

## Meet the Penguins {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/palmerpeguins-hex-logo.png){style="width: 120px;"}](https://allisonhorst.github.io/palmerpenguins/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
Created by the great [Allison Horst](https://twitter.com/allison_horst), the author of these beautiful illustrations.
```r
install.packages("palmerpenguins")
```
:::
::::

The `palmerpenguins` data contains size measurements for **three penguin species** observed on three islands in the Palmer Archipelago, Antarctica.

These data were collected from 2007--2009 by [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) with the [Palmer Station Long Term Ecological Research Program](https://pal.lternet.edu/), part of th [US Long Term Ecological Research Network](https://lternet.edu/).

We will use this package in the first part of the course to get familiar with R.

```{r}
#| echo: false
#| eval: false

palmerpenguins::path_to_file("penguins_raw.csv") |>
  fs::file_copy(here::here("data", "palmerpenguins-raw.csv"))

palmerpenguins::path_to_file("penguins.csv") |>
  fs::file_copy(here::here("data", "palmerpenguins-valid.csv"))

palmerpenguins::penguins |>
  readr::write_rds(here::here("data", "palmerpenguins-valid.rds"))
```

::: {.notes}
:::

## Meet the Penguins {.smaller}

:::: {.columns}
::: {.column style="width: 47.5%;"}
![](images/allison-horst-figure-23.png){style="width: 100%; padding-top: 100px;"}
:::
::: {.column style="width: 47.5%;"}
![](images/allison-horst-figure-51.png){style="width: 100%; padding-top: 100px;"}
:::
::::

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## Inspecting the Raw Data File  {.smaller}

**Known your data**.

1. Click [here](https://github.com/danielvartan/r-course/blob/352b75a01db92ea175fe4cc59246f96799421909/data/palmer-penguins-raw.csv) to download the Palmer Penguis raw data file.
2. Save it in a folder named `data` in the root of your project.
3. Using the file manager, open the file in RStudio.

The data documentation can be accessed by running:

```r
library(palmerpenguins)
```

```r
?penguins_raw
```

You can also use the following code to open the file:

```r
library(rstudioapi)
```

```r
path_to_file("penguins_raw.csv") |> documentOpen()
```

::: {.notes}
:::

## Inspecting the Raw Data File  {.smaller}

Before importing the data to R, let's first take a look at the content of this data file in a text editor.

``` {.csv filename="palmerpenguins-raw.csv"}
studyName,Sample Number,Species,Region,Island,Stage,Individual ID,Clutch Completion,Date Egg,Culmen Length (mm),Culmen Depth (mm),Flipper Length (mm),Body Mass (g),Sex,Delta 15 N (o/oo),Delta 13 C (o/oo),Comments
PAL0708,1,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N1A1,Yes,2007-11-11,39.1,18.7,181,3750,MALE,NA,NA,Not enough blood for isotopes.
PAL0708,2,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N1A2,Yes,2007-11-11,39.5,17.4,186,3800,FEMALE,8.94956,-24.69454,NA
PAL0708,3,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N2A1,Yes,2007-11-16,40.3,18,195,3250,FEMALE,8.36821,-25.33302,NA
PAL0708,4,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N2A2,Yes,2007-11-16,NA,NA,NA,NA,NA,NA,NA,Adult not sampled.
PAL0708,5,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N3A1,Yes,2007-11-16,36.7,19.3,193,3450,FEMALE,8.76651,-25.32426,NA
PAL0708,6,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N3A2,Yes,2007-11-16,39.3,20.6,190,3650,MALE,8.66496,-25.29805,NA
PAL0708,7,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N4A1,No,2007-11-15,38.9,17.8,181,3625,FEMALE,9.18718,-25.21799,Nest never observed with full clutch.
PAL0708,8,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N4A2,No,2007-11-15,39.2,19.6,195,4675,MALE,9.4606,-24.89958,Nest never observed with full clutch.
PAL0708,9,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N5A1,Yes,2007-11-09,34.1,18.1,193,3475,NA,NA,NA,No blood sample obtained.
PAL0708,10,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N5A2,Yes,2007-11-09,42,20.2,190,4250,NA,9.13362,-25.09368,No blood sample obtained for sexing.
PAL0708,11,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N6A1,Yes,2007-11-09,37.8,17.1,186,3300,NA,8.63243,-25.21315,No blood sample obtained for sexing.
PAL0708,12,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N6A2,Yes,2007-11-09,37.8,17.3,180,3700,NA,NA,NA,No blood sample obtained.
PAL0708,13,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N7A1,Yes,2007-11-15,41.1,17.6,182,3200,FEMALE,NA,NA,Not enough blood for isotopes.
PAL0708,14,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N7A2,Yes,2007-11-15,38.6,21.2,191,3800,MALE,NA,NA,Not enough blood for isotopes.
PAL0708,15,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N8A1,Yes,2007-11-16,34.6,21.1,198,4400,MALE,8.55583,-25.22588,NA
PAL0708,16,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N8A2,Yes,2007-11-16,36.6,17.8,185,3700,FEMALE,NA,NA,Not enough blood for isotopes.
PAL0708,17,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,"Adult, 1 Egg Stage",N9A1,Yes,2007-11-12,38.7,19,195,3450,FEMALE,9.18528,-25.06691,NA
```

::: {.notes}
:::

## The Working Directory {.smaller}

Pointing to files inside your project.

```r
getwd()
#> E:\r-course
```

```r
list.files()
#> [1] "data" "README.md" "LICENSE.md" "r-course.Rproj"
```

```r
list.files("data")
#> [1] "palmerpenguins-raw.csv"
```

```r
list.files("./data")
#> [1] "palmerpenguins-raw.csv"
```

```r
file <- "./data/palmerpenguins-raw.csv"
```

## The `here` Package {.smaller}

:::: {.columns}
::: {.column style="width: 45%;"}
[`here`](https://here.r-lib.org/) is a package that helps you use relative paths in your R projects.

It turns file management much easier.

```r
install.packages("here")
```

```r
library(here)
```

```r
here()
#> E:\r-course
```

```r
here("data", "palmerpenguins-raw.csv")
#> E:\r-course\data\palmerpenguins-raw.csv
```
:::
::: {.column style="width: 55%;"}
![](images/allison-horst-figure-50.png){fig-align="center" style="width: 90%; padding-top: 40px;"}
:::
::::

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## The `readr` Package {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/readr-hex-logo.png){style="width: 120px;"}](https://readr.tidyverse.org/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
`readr` provides a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV).

```r
install.packages("readr")
```
:::
::::

::: {style="padding-top: 30px"}
```r
library(readr)
```

```r
?read_csv
```

```r
?read_csv2
```

```r
?read_delim
```
:::

::: {.notes}
:::

## Importing the Data {.smaller}

```{r}
library(here)
library(palmerpenguins)
library(readr)

data <-
  here("data", "palmerpenguins-raw.csv") |>
  read_csv(col_types = cols(.default = "c"))
```

```{r}
#| attr-source: "style='height: 400px;'"

library(dplyr)

data |> glimpse()
```

::: {.notes}
:::

## Inspecting the Raw Data {.smaller}

```r
data |> View()
```

::: {style="font-size: 1em; padding-top: 30px;"}
```{r}
#| echo: false

data |> rmarkdown::paged_table(options = list(rows.print = 12))
```
:::

::: {.notes}
:::

## Tidying the Data {.smaller}

## The `janitor` Package {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/janitor-hex-logo.png){style="width: 120px;"}](https://sfirke.github.io/janitor/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
[`janitor`](https://sfirke.github.io/janitor/) provides simple functions for examining and cleaning dirty data.

```r
install.packages("janitor")
```
:::
::::

::: {.notes}
:::

## `clean_names()` {.smaller}

![](images/allison-horst-figure-25.png){fig-align="center" style="width: 90%; padding-top: 25px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `clean_names()` {.smaller}

```{r}
data |> names()
```

```{r}
library(janitor)

data <- data |> clean_names()
```

```{r}
data |> names()
```

::: {.notes}
:::

## The `tidyr` Package {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/tidyr-hex-logo.png){style="width: 120px;"}](https://tidyr.tidyverse.org/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
[`tidyr`](https://tidyr.tidyverse.org/) provides a set of functions that help you to tidy your data.

```r
install.packages("tidyr")
```
:::
::::

::: {.notes}
:::

## The `tibble` Package {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/tibble-hex-logo.svg){style="width: 120px;"}](https://tidyr.tidyverse.org/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
[`tibble`](https://tibble.tidyverse.org/) is a modern reimagining of the data frame, keeping what time has proven to be effective, and throwing out what is not.

```r
install.packages("tibble")
```
:::
::::

:::: {.columns"}
::: {.column style="width: 50%; padding-top: 30px;"}
Using R native `data.frame` class

```{r}
#| attr-source: "style='height: 250px;'"

data |> as.data.frame()
```
:::
::: {.column style="width: 50%; padding-top: 30px;"}
Using `tibble` (Tidyverse way)

```{r}
#| attr-source: "style='height: 250px;'"

data
```
:::
::::

::: {.notes}
:::

## The `dplyr` Package {.smaller}

:::: {.columns}
::: {.column style="width: 15%;"}
[![](images/dplyr-hex-logo.png){style="width: 120px;"}](https://dplyr.tidyverse.org/)
:::
::: {.column style="width: 85%; padding-top: 15px;"}
[`dplyr`](https://dplyr.tidyverse.org/) is one the most important packages in the Tidyverse. It provides a **grammar** for data manipulation.

```r
install.packages("dplyr")
```
:::
::::

::: {.notes}
:::

## `dplyr` Verbs {.smaller}

- `mutate()`: Create, modify, and delete columns
- `transmute()`: Creates a new data frame containing only specified computations
- `select()`: Keep or drop columns using their names and types
- `slice()`: Subset rows using their positions
- `filter()`: Keep rows that match a condition
- `summarize()`: Summarise each group down to one row
- `arrange()`: Order rows using column values
- `rename()`: Rename columns
- `relocate()`: Change column order

::: {.notes}
:::

## `mutate()`

![](images/allison-horst-figure-24.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `transmute()`

::: {.notes}
:::

## `select()`

::: {.notes}
:::

## `slice()`

::: {.notes}
:::

## `filter()`

![](images/allison-horst-figure-31.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `summarize()`

::: {.notes}
:::

## `arrange()`

::: {.notes}
:::

## `rename()`

![](images/allison-horst-figure-29.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `relocate()`

![](images/allison-horst-figure-30.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `across()`

![](images/allison-horst-figure-33.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `case_when()`

![](images/allison-horst-figure-32.png){fig-align="center" style="width: 90%; padding-top: 0px;"}

::: footer
(Artwork by [Allison Horst](https://twitter.com/allison_horst))
:::

::: {.notes}
:::

## `if_else()`

::: {.notes}
:::

## Data Validation {.smaller}

## Inspecting the Valid Data {.smaller}

```r
data |> View()
```

::: {style="font-size: 1em; padding-top: 30px;"}
```{r}
#| echo: false

palmerpenguins::penguins |>
  rmarkdown::paged_table(options = list(rows.print = 12))
```
:::

::: {.notes}
:::

## Exporting the Data {.smaller}

```{r}
library(here)
library(readr)
```

```{r}
if (!dir.exists(here("data"))) {
  dir.create(here("data"))
}
```

```{r}
#| eval: false

data |> write_csv(here("data", "palmerpenguins-valid.csv"))
```

```{r}
#| eval: false

data |> write_rds(here("data", "palmerpenguins-valid.rds"))
```

::: {style="font-size: 0.9em; padding-top: 30px;"}
**Tip**: Store your data in research repositories like [The Open Science Framework](https://osf.io/) (See the [`osfr`](https://docs.ropensci.org/osfr/) package). If you are working with sensitive or human data, ensure it is encrypted before storing it in the cloud (See the [`lockr`](https://danielvartan.github.io/lockr/) package).
:::

## How to Learn More {.smaller}

:::: {.columns}
::: {.column style="width: 47.5%;"}
[![](images/wickham-2023-book-cover.png){fig-align="center" style="width: 85%; padding-top: 0px;"}](https://r4ds.hadley.nz/)
:::
::: {.column style="width: 5%;"}
:::
::: {.column style="width: 47.5%;"}
![](images/van-der-loo-2018-book-cover.jpg){fig-align="center" style="width: 75%;"}
:::
::::

::: footer
(Book cover image from @wickham2023e and @vanderloo2018)
:::

::: {.notes}
:::
