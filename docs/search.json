[
  {
    "objectID": "index.html#hi-there",
    "href": "index.html#hi-there",
    "title": "An Introduction to the R Programming Language",
    "section": "Hi there! üëã",
    "text": "Hi there! üëã\n\n\nThis course will introuce you to the R programming language.\n\n\n\n\n\n\n\nHere are the main topics:\n\n\nIntroduction\nComputer Science\nR Basics\nData Munging\nExploratory Data Analysis\nModeling\nExercise\nConclusion\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#pre-course-survey",
    "href": "index.html#pre-course-survey",
    "title": "An Introduction to the R Programming Language",
    "section": "Pre-Course Survey",
    "text": "Pre-Course Survey"
  },
  {
    "objectID": "index.html#course-objectives",
    "href": "index.html#course-objectives",
    "title": "An Introduction to the R Programming Language",
    "section": "Course Objectives",
    "text": "Course Objectives\n\nGrasp the foundational principles and key concepts of computer science.\nUnderstand the structure and essential components of the R programming language.\nMaster fundamental techniques for data munging.\nDevelop skills in creating insightful data visualizations.\nLearn techniques for conducting exploratory data analysis.\nGain an introduction to basic modeling approaches.\n\n\n(Future course? An Introduction to Git)"
  },
  {
    "objectID": "index.html#course-content",
    "href": "index.html#course-content",
    "title": "An Introduction to the R Programming Language",
    "section": "Course Content",
    "text": "Course Content\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "An Introduction to the R Programming Language",
    "section": "Schedule",
    "text": "Schedule\n\n\n\nThe course will take place in one of the laboratories of the Public Health School (FSP) of the University of S√£o Paulo (USP).\nThe classes are distributed over 5 days, with a total of 9 hours.\n\n\n\nMonday (24/03) 13:00-14:00\nTuesday (25/03) 13:00-14:00\nWednesday (26/03) 13:00-18:00\nThursday (27/03) 13:00-14:00\nFriday (28/03) 13:00-14:00"
  },
  {
    "objectID": "index.html#class-dynamic",
    "href": "index.html#class-dynamic",
    "title": "An Introduction to the R Programming Language",
    "section": "Class Dynamic",
    "text": "Class Dynamic\nTheory ‚û°Ô∏è Practice.\nüèã In-class activities.\nüìì Final project.\nüòå No formal evaluation."
  },
  {
    "objectID": "index.html#main-references",
    "href": "index.html#main-references",
    "title": "An Introduction to the R Programming Language",
    "section": "Main References",
    "text": "Main References\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from Wickham et al. (2023) and Wickham (2019))\n\n\nSee also: Advanced R Solutions (Grosser et al., 2021)."
  },
  {
    "objectID": "index.html#learn-from-mistakes",
    "href": "index.html#learn-from-mistakes",
    "title": "An Introduction to the R Programming Language",
    "section": "Learn from Mistakes",
    "text": "Learn from Mistakes\nMistakes will happen. Don‚Äôt let them discourage you!\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#getting-help",
    "href": "index.html#getting-help",
    "title": "An Introduction to the R Programming Language",
    "section": "Getting Help",
    "text": "Getting Help\n\n\nDon‚Äôt be afraid to ask questions, even if they seem simple. Everyone has to start somewhere!\nThe programming community is very active and there are many resources available to help you learn and solve problems.\nOne of the best ways to get help is to search or ask questions on forums like Stack Overflow."
  },
  {
    "objectID": "index.html#notes",
    "href": "index.html#notes",
    "title": "An Introduction to the R Programming Language",
    "section": "Notes",
    "text": "Notes\nüíæ Bring a flash drive/pen drive.\nüë©‚Äçüíª Try to use the same computer for all classes.\nüí¨ Always open this presentation in the browser.\n‚ùå Don‚Äôt miss a class.\nüôã‚Äç‚ôÇÔ∏è Ask questions.\nü§ù Help each other.\nüéâ Have fun!"
  },
  {
    "objectID": "index.html#course-presentation",
    "href": "index.html#course-presentation",
    "title": "An Introduction to the R Programming Language",
    "section": "Course Presentation",
    "text": "Course Presentation\n\n\nAlways have this presentation open in your browser.\n\nWe will use it to navigate through the course content.\nUse it to access the course materials and exercises.\n\n\nTip: Want to create QR Codes like this? Check the qrcode R package.\n\n\n\n\n\n\n\n\n\ndanielvartan.github.io/r-course"
  },
  {
    "objectID": "index.html#lets-start-from-zero",
    "href": "index.html#lets-start-from-zero",
    "title": "An Introduction to the R Programming Language",
    "section": "Let‚Äôs Start from Zero",
    "text": "Let‚Äôs Start from Zero\n\n\nThis is a programming course.\nAs such, we must understand the basics of how a computer works.\nIt is essential to start from materiality; otherwise, things stop making sense.\nIf you understand R at its core, you can navigate any challenge you encounter.\n\n\n\n\n\n\n\n(Ariadne‚Äôs thread. Artwork by Eroshka)\n\n\nIf you just want to learn how to push buttons, stick to Excel or Stata."
  },
  {
    "objectID": "index.html#computer-science",
    "href": "index.html#computer-science",
    "title": "An Introduction to the R Programming Language",
    "section": "Computer Science",
    "text": "Computer Science\n\n\nThe science of information processes and their interactions with the world (Denning, 2005).\nComputer science studies information processes both artificial and natural (Denning, 2005). It seeks to build a scientific foundation for such topics as computer design, computer programming, information processing, algorithmic solutions of problems, and the algorithmic process itself (Brookshear & Brylow, 2020).\n\n\n\n\n\n\n\n(Photo by Mark Richards)"
  },
  {
    "objectID": "index.html#abstractions",
    "href": "index.html#abstractions",
    "title": "An Introduction to the R Programming Language",
    "section": "Abstractions",
    "text": "Abstractions\n\n\n(Artwork by Pablo Picasso ‚Äì Le Taureau (1945-46))"
  },
  {
    "objectID": "index.html#computer-architecture",
    "href": "index.html#computer-architecture",
    "title": "An Introduction to the R Programming Language",
    "section": "Computer Architecture",
    "text": "Computer Architecture\nStored-Program Concept (1945) (AKA ‚Äúvon Neumann Architecture‚Äù)\nFirst proposed by J. P. Eckert and his team (1944-1945).\nInput -&gt; Storage -&gt; Processing -&gt; Output\n\n\n\n\n\n(Reproduced from Brookshear & Brylow (2020))"
  },
  {
    "objectID": "index.html#binary-arith.-boolean-logic",
    "href": "index.html#binary-arith.-boolean-logic",
    "title": "An Introduction to the R Programming Language",
    "section": "Binary Arith. & Boolean Logic",
    "text": "Binary Arith. & Boolean Logic\n\n\n\n\nDecimal\nBinary\n\n\n\n0\n0\n\n\n1\n1\n\n\n2\n10\n\n\n3\n11\n\n\n4\n100\n\n\n\n\n\nAddition\n\n\n\n01 +\n\n\n01 +\n\n\n01 =\n\n\n11\n\n\n\n\n\n\nx\ny\nx ‚àß y\nx ‚à® y\n\n\n\n0\n0\n0\n0\n\n\n0\n1\n0\n1\n\n\n1\n0\n0\n1\n\n\n1\n1\n1\n1\n\n\n\n\n\nx\n¬¨x\n\n\n\n0\n1\n\n\n1\n0"
  },
  {
    "objectID": "index.html#logic-gates",
    "href": "index.html#logic-gates",
    "title": "An Introduction to the R Programming Language",
    "section": "Logic Gates",
    "text": "Logic Gates\n\n\n\n\n\n(Adapted from Brookshear & Brylow (2020))"
  },
  {
    "objectID": "index.html#what-we-are-really-doing-when-we-program",
    "href": "index.html#what-we-are-really-doing-when-we-program",
    "title": "An Introduction to the R Programming Language",
    "section": "What We Are Really Doing When We Program?",
    "text": "What We Are Really Doing When We Program?\n\n(Video by George Zaidan and Sajan Saini, on TED-ED)\n\nA look inside a computer."
  },
  {
    "objectID": "index.html#programming-languages",
    "href": "index.html#programming-languages",
    "title": "An Introduction to the R Programming Language",
    "section": "Programming Languages",
    "text": "Programming Languages\n\n\n\nThe instructions which govern this operation must be given to the device in absolutely exhaustive detail. [‚Ä¶] All these procedures require the use of some code to express the logical and the algebraical definition of the problem under consideration, as well as the necessary numerical material. (von Neumann, 1993)\n\n\n\n\n\n\n\n\n(Photo by Corbis Historical/Getty Images)"
  },
  {
    "objectID": "index.html#open-source-prog.-lang.",
    "href": "index.html#open-source-prog.-lang.",
    "title": "An Introduction to the R Programming Language",
    "section": "Open-Source Prog. Lang.",
    "text": "Open-Source Prog. Lang.\n\n\n(Artwork by Calltutors)\n\n\nHigh-level programming languages.\nR was started by professors Ross Ihaka and Robert Gentleman as a programming language to teach introductory statistics at the University of Auckland. It was release in 1993.\nPython was created by Guido van Rossum and released in 1991.\nstatistical computing and data visualization versus general-purpose.\nScience-driven versus industry-driven."
  },
  {
    "objectID": "index.html#why-r",
    "href": "index.html#why-r",
    "title": "An Introduction to the R Programming Language",
    "section": "Why R?",
    "text": "Why R?\nR is an excellent language to get started with programming because it‚Äôs specialized. Unlike some other languages, it doesn‚Äôt have an overwhelming amount of features for you to learn.\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#python-is-fine-too-i-guess",
    "href": "index.html#python-is-fine-too-i-guess",
    "title": "An Introduction to the R Programming Language",
    "section": "Python is Fine Too, I Guess‚Ä¶",
    "text": "Python is Fine Too, I Guess‚Ä¶\nIn a general sense, Python is also good for learning how to program, but it is much easier to learn how to work with data in R. In academia, both programming languages are very important."
  },
  {
    "objectID": "index.html#its-not-what-you-think",
    "href": "index.html#its-not-what-you-think",
    "title": "An Introduction to the R Programming Language",
    "section": "It‚Äôs Not What You Think",
    "text": "It‚Äôs Not What You Think\n\n\n\nProgramming in movies versus programming in real life:\n\n\n\n\n\n\n\n\n\n\n\n\nYou don‚Äôt have to be a math genius to learn how to code."
  },
  {
    "objectID": "index.html#a-bit-of-r-history",
    "href": "index.html#a-bit-of-r-history",
    "title": "An Introduction to the R Programming Language",
    "section": "A Bit of R History",
    "text": "A Bit of R History\n\n\nR is a free and open-source programming language designed for data analysis graphics (Ihaka & Gentleman, 1996).\nIt was developed by Ross Ihaka and Robert Gentleman in the statistics department at the University of Auckland (New Zealand) in 1991 and introduced to the scientific community in 1993 (Peng, 2022).\n\n\n\n\n\n\n\n\n\n(Robert Gentleman (Left) and Ross Ihaka (Right). Photos by an Unknown Author.)\n\nAlthough R is a specialized language, you can stretch it to do almost anything (like this presentation!)."
  },
  {
    "objectID": "index.html#community",
    "href": "index.html#community",
    "title": "An Introduction to the R Programming Language",
    "section": "Community",
    "text": "Community\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Artworks by Allison Horst)"
  },
  {
    "objectID": "index.html#important-r-comm.-and-events",
    "href": "index.html#important-r-comm.-and-events",
    "title": "An Introduction to the R Programming Language",
    "section": "Important R Comm. and Events",
    "text": "Important R Comm. and Events"
  },
  {
    "objectID": "index.html#how-to-learn-more",
    "href": "index.html#how-to-learn-more",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from Brookshear & Brylow (2020) and Ifrah (1994/2001))"
  },
  {
    "objectID": "index.html#installing-r",
    "href": "index.html#installing-r",
    "title": "An Introduction to the R Programming Language",
    "section": "Installing R",
    "text": "Installing R\n\n\nInstalling R is very simple.\nYou just need to download the installer from the Comprehensive R Archive Network (CRAN).\nGo to Download R for [YOUR OS] and then click on the base link‚ÄîThe base version of R.\nSimply follow the instructions of the installer."
  },
  {
    "objectID": "index.html#installing-r-1",
    "href": "index.html#installing-r-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Installing R",
    "text": "Installing R"
  },
  {
    "objectID": "index.html#the-rstudio-ide",
    "href": "index.html#the-rstudio-ide",
    "title": "An Introduction to the R Programming Language",
    "section": "The RStudio IDE",
    "text": "The RStudio IDE\nAn IDE (Integrated Development Environment) is a software that provides a set of tools to help the programmer to write code. It puts together things like a text editor, a console, a debugger, and a file manager.\nRStudio is the most popular IDE for R. Like R, it is also free and open-source.\n\n\n\n\n\nAlways use software in English."
  },
  {
    "objectID": "index.html#installing-rstudio",
    "href": "index.html#installing-rstudio",
    "title": "An Introduction to the R Programming Language",
    "section": "Installing RStudio",
    "text": "Installing RStudio"
  },
  {
    "objectID": "index.html#creating-a-project",
    "href": "index.html#creating-a-project",
    "title": "An Introduction to the R Programming Language",
    "section": "Creating a Project",
    "text": "Creating a Project\n\n\nProject-oriented workflow: A project consolidates all related files and resources in one place, ensuring that your work is reproducible and well-organized.\nIt is important to have a structured project directory. A best practice is to follow the structure made for R Packages (Marwick et al., 2018).\nEvery data project must be accompanied, at least, by a README file, explaining the project, and a LICENSE file, defining the terms of use of the data (See Open Source Licenses here).\n\n\n\n\n\n\n\n(Reproduced from Marwick et al. (2018))"
  },
  {
    "objectID": "index.html#creating-a-project-1",
    "href": "index.html#creating-a-project-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Creating a Project",
    "text": "Creating a Project"
  },
  {
    "objectID": "index.html#adding-a-readme-license-file",
    "href": "index.html#adding-a-readme-license-file",
    "title": "An Introduction to the R Programming Language",
    "section": "Adding a README & LICENSE File",
    "text": "Adding a README & LICENSE File\n\n\nYou can use the usethis R package to create these files.\n\nFirst, call the package using:\n# install.packages(\"usethis\")\nlibrary(usethis)\nAdd a README file using:\nuse_readme_md()\nAdd a MIT License file using:\nuse_mit_license()"
  },
  {
    "objectID": "index.html#quarto-notebooks",
    "href": "index.html#quarto-notebooks",
    "title": "An Introduction to the R Programming Language",
    "section": "Quarto Notebooks",
    "text": "Quarto Notebooks\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#markdown-basics",
    "href": "index.html#markdown-basics",
    "title": "An Introduction to the R Programming Language",
    "section": "Markdown Basics",
    "text": "Markdown Basics\n\n\nMarkdown is a lightweight markup language with plain text formatting syntax. The great thing about Markdown is that you can forget about the formatting and focus on the content.\nQuarto Notebooks are a type of Markdown document that allows you to mix code, text, and output in a single document. These slides are all written in Markdown.\nLearn more about the Markdown syntax here."
  },
  {
    "objectID": "index.html#objects",
    "href": "index.html#objects",
    "title": "An Introduction to the R Programming Language",
    "section": "Objects",
    "text": "Objects\n\n\nEverything in R is an object.\nEverything that happens in R is the result of a function call.\n\nScalars (0D): 1\nVectors (1D): c(1, 2, 3)\nMatrices (2D):matrix(1:9, nrow = 3, ncol = 3)\nArrays (nD):array(1:27, dim = c(3, 3, 3))\n\n\n\n\n\n\n\n\n(Artwork by Kanishk Srivastava)\n\n\nData frames are a special case of 2D objects."
  },
  {
    "objectID": "index.html#vectorized-operations",
    "href": "index.html#vectorized-operations",
    "title": "An Introduction to the R Programming Language",
    "section": "Vectorized Operations",
    "text": "Vectorized Operations\n\n\nIn R, most operations are vectorized, meaning they operate on all elements of a vector at once, without needing explicit loops.\nThis makes code more concise, readable, and less error-prone, while improving efficiency compared to non-vectorized languages.\n\n\nc(1, 2, 3) + 1\n#&gt; [1] 2 3 4\n\n\nc(1, 2, 3) * c(1, 2, 3)\n#&gt; [1] 1 4 9\n\n\n\n\n\n\n\n\n\n(Artwork by Kanishk Srivastava)"
  },
  {
    "objectID": "index.html#primary-data-types",
    "href": "index.html#primary-data-types",
    "title": "An Introduction to the R Programming Language",
    "section": "Primary Data Types",
    "text": "Primary Data Types\n\n\nThese are part of the atomic data types in R.\n\n\nlogical: TRUE/FALSE.\n\ninteger: 1, 2, 3.\n\ndouble: 1.0, 2.0, 3.0.\n\ncharacter: ‚ÄúHello, World!‚Äù.\n\n\n\ntypeof(as.Date(\"2025-01-01\"))\n#&gt; [1] \"double\"\n\n\n\n\n\n\n\n\nSee: https://youtu.be/e1zJS31tr88?si=7-TamPi2tmwprCUL&t=900"
  },
  {
    "objectID": "index.html#data-classes",
    "href": "index.html#data-classes",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Classes",
    "text": "Data Classes\n\n\n\n\ncharacter (e.g., ‚ÄúMaria‚Äù, ‚ÄúJohn‚Äù)\n\nfactor(e.g., 1 = ‚ÄúMale‚Äù, 2 = ‚ÄúFemale‚Äù)\n\ninteger (e.g., 1, 2, 3)\n\ndouble (e.g., 1.0, 2.0, 3.0)\n\ncomplex (e.g., 1 + 2i, 3 + 4i)\n\nlogical (e.g., TRUE, FALSE)\n\n\n\n\nDate (e.g., 2023-01-01) (Linear time)\n\nPOSIXct (e.g., 2023-01-01 00:00:00) (linear time)\n\nInterval (e.g., 2023-01-01 00:00:00‚Äì2023-12-15 15:40:00) (linear time)\n\nDuration (e.g., 1 year, 2 months, 3 days) (linear time)\n\nPeriod (e.g., 1 year, 2 months, 3 days) (linear(ish) time)\n\nhms (e.g., 01:00:00) (Circular time)"
  },
  {
    "objectID": "index.html#non-atomic-objects",
    "href": "index.html#non-atomic-objects",
    "title": "An Introduction to the R Programming Language",
    "section": "Non-Atomic Objects",
    "text": "Non-Atomic Objects\n\n\nAtomic types are non-recursive objects, i.e., objects that can‚Äôt hold themselfs as an entry (e.g., logical, integer, double, character).\n\nNon-Atomic Objects\n\nMatrices (matrix()) (2D)\nArrays (array()) (nD)\nLists (list()) (nD)\nData Frames (data.frame()) (a special case of list) (2D)\n\n\n\n\nlist(\n  list(list(1), list(2)),\n  list(list(\"a\"), list(\"b\")),\n  list(TRUE)\n)\n#&gt; [[1]]\n#&gt; [[1]][[1]]\n#&gt; [[1]][[1]][[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; \n#&gt; [[1]][[2]]\n#&gt; [[1]][[2]][[1]]\n#&gt; [1] 2\n#&gt; \n#&gt; \n#&gt; \n#&gt; [[2]]\n#&gt; [[2]][[1]]\n#&gt; [[2]][[1]][[1]]\n#&gt; [1] \"a\"\n#&gt; \n#&gt; \n#&gt; [[2]][[2]]\n#&gt; [[2]][[2]][[1]]\n#&gt; [1] \"b\"\n#&gt; \n#&gt; \n#&gt; \n#&gt; [[3]]\n#&gt; [[3]][[1]]\n#&gt; [1] TRUE"
  },
  {
    "objectID": "index.html#operations",
    "href": "index.html#operations",
    "title": "An Introduction to the R Programming Language",
    "section": "Operations",
    "text": "Operations\n\nLeft Hand Side Operator Right Hand Side"
  },
  {
    "objectID": "index.html#arithmetic-operators",
    "href": "index.html#arithmetic-operators",
    "title": "An Introduction to the R Programming Language",
    "section": "Arithmetic Operators",
    "text": "Arithmetic Operators\n\n\n\n\n`+`() Addition\n\n`-`() Subtraction\n\n`*`() Multiplication\n\n`/`() Division\n\n`^`() Exponentiation\n\n`%/%`() Integer division\n\n`%%`() Modulusbr(Remainder from Division)\n\n\n\n1 + 1\n#&gt; [1] 2\n\n\n1 - 1\n#&gt; [1] 0\n\n\n1 * 2\n#&gt; [1] 2\n\n\n1 / 2\n#&gt; [1] 0.5\n\n\n2^2\n#&gt; [1] 4\n\n\n5 %/% 2\n#&gt; [1] 2\n\n\n5 %% 2\n#&gt; [1] 1"
  },
  {
    "objectID": "index.html#assignment-operators",
    "href": "index.html#assignment-operators",
    "title": "An Introduction to the R Programming Language",
    "section": "Assignment Operators",
    "text": "Assignment Operators\n\n\n\n\n`&lt;-`() Leftwards assignment(Use this!)\n\n`&lt;&lt;-`() Leftwards assignment (Global Environment)\n\n`-&gt;`() Rightwards assignment\n\n`-&gt;&gt;`() Rightwards assignment (Global Environment)\n\n`=`() Equals sign assignment\n\n\n\nx &lt;- 1; x\n#&gt; [1] 1\n\n\nx &lt;&lt;- 1; x\n#&gt; [1] 1\n\n\n1 -&gt; x; x\n#&gt; [1] 1\n\n\n1 -&gt;&gt; x; x\n#&gt; [1] 1\n\n\nx = 1; x\n#&gt; [1] 1\n\n1 = x; x # Error!"
  },
  {
    "objectID": "index.html#names",
    "href": "index.html#names",
    "title": "An Introduction to the R Programming Language",
    "section": "Names",
    "text": "Names\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#names-1",
    "href": "index.html#names-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Names",
    "text": "Names\n\n\nR has strict rules regarding the names of objects.\n\nNames can only contain letters, numbers, dots, and underscores.\nNames can‚Äôt start with a number or a dot.\nNames can‚Äôt be reserved words (e.g., if, else, TRUE, FALSE).\nNames are case-sensitive.\n\n\n\n\nvariable-name Bad\nvariable.name Good, but not advisable\nvariable_name Good (snake_case) ‚Äî Most used in R\n1variable_name Bad\n.variable_name Bad\nvariableName Good (camelCase)\nVariableName Good (PascalCase)"
  },
  {
    "objectID": "index.html#comparison-operators",
    "href": "index.html#comparison-operators",
    "title": "An Introduction to the R Programming Language",
    "section": "Comparison Operators",
    "text": "Comparison Operators\n\n\n\n\n`==`() Equal to\n\n`!=`() Not equal to\n\n`&gt;`() Greater than\n\n`&lt;`() Less than\n\n`&gt;=`() Greater than or equal to\n\n`&lt;=`() Less than or equal to\n\n\n\n1 == 1\n#&gt; [1] TRUE\n\n\n1 != 2\n#&gt; [1] TRUE\n\n\n2 &gt; 1\n#&gt; [1] TRUE\n\n\n1 &lt; 2\n#&gt; [1] TRUE\n\n\n1 &gt;= 1\n#&gt; [1] TRUE\n\n\n1 &lt;= 1\n#&gt; [1] TRUE"
  },
  {
    "objectID": "index.html#logical-operators",
    "href": "index.html#logical-operators",
    "title": "An Introduction to the R Programming Language",
    "section": "Logical Operators",
    "text": "Logical Operators\n\n\n\n\n`&`() AND (Element-wise)\n\n`&&`() AND\n\n`|`() OR (Element-wise)\n\n`||`() OR\n\n`!`() NOT\n\n\n\nc(TRUE, FALSE) & c(TRUE, TRUE)\n#&gt; [1]  TRUE FALSE\n\n\nTRUE && FALSE\n#&gt; [1] FALSE\n\nc(TRUE, FALSE) && c(TRUE, TRUE) # Error!\n\nc(TRUE, FALSE) | c(TRUE, TRUE)\n#&gt; [1] TRUE TRUE\n\n\nTRUE || FALSE\n#&gt; [1] TRUE\n\nc(TRUE, FALSE) || c(TRUE, TRUE) # Error!\n\n!TRUE\n#&gt; [1] FALSE"
  },
  {
    "objectID": "index.html#other-operators",
    "href": "index.html#other-operators",
    "title": "An Introduction to the R Programming Language",
    "section": "Other Operators",
    "text": "Other Operators\n\n\n\n\n`:`() Sequence operator\n\n`%in%`() Matching operator\n\n`%*%`() Matrix multiplication\n\n\n\n1:10\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\"a\" %in% c(\"a\", \"b\", \"c\")\n#&gt; [1] TRUE\n\n\nmatrix(1:4, nrow = 2) %*% matrix(1:4, nrow = 2)\n#&gt;      [,1] [,2]\n#&gt; [1,]    7   15\n#&gt; [2,]   10   22"
  },
  {
    "objectID": "index.html#operator-precedence",
    "href": "index.html#operator-precedence",
    "title": "An Introduction to the R Programming Language",
    "section": "Operator Precedence",
    "text": "Operator Precedence\n\n\n\n\n`^`() Exponent (Right to Left)\n\n-x, +x Unary minus, Unary plus (Left to Right)\n\n`%%`() Modulus (Left to Right)\n\n`*`(), `/`() Multiplication, Division (Left to Right)\n\n`+`(), `-`() Addition, Subtraction (Left to Right)\n\n`==`(), `!=`() Comparisons (Left to Right)\n\n\n\n\n\n\n`!`() Logical NOT (Left to Right)\n\n`&`(), `&&`() Logical AND (Left to Right)\n\n`|`(), `||`() Logical OR (Left to Right)\n\n`-&gt;`(), `-&gt;&gt;`() Rightward assignment (Left to Right)\n\n`&lt;-`(), `&lt;&lt;-`() Leftward assignment (Right to Left)\n\n`=`(): Leftward assignment (Right to Left)\n\n\n\n\n\n2^2 + 1 * 2\n#&gt; [1] 6\n\n\n\n\n\n!FALSE && TRUE\n#&gt; [1] TRUE"
  },
  {
    "objectID": "index.html#subsetting",
    "href": "index.html#subsetting",
    "title": "An Introduction to the R Programming Language",
    "section": "Subsetting",
    "text": "Subsetting\n\n\nAtomic\n\n\n`[`() 1 level extraction\n\n\nc(\"a\", \"b\", \"c\")[1]\n#&gt; [1] \"a\"\n\n\nIndexation\nIndexation starts at 1 in R!\n\nc(\"a\", \"b\", \"c\")[1]\n#&gt; [1] \"a\"\n\n\nc(\"a\", \"b\", \"c\")[2]\n#&gt; [1] \"b\"\n\n\nc(\"a\", \"b\", \"c\")[0]\n#&gt; character(0)\n\n\n\n\n\nNon-Atomic\n\n\n`[`() 1 level extraction\n\n`[[`() 2 level extraction\n\n`$`() 2 level extraction\n\n\ndata &lt;- list(a = 1, b = 2)\n\n\ndata[1]\n#&gt; $a\n#&gt; [1] 1\n\n\ndata[[1]]\n#&gt; [1] 1\n\n\ndata$a\n#&gt; [1] 1\n\n\ndata[[\"a\"]] # == data$a\n#&gt; [1] 1"
  },
  {
    "objectID": "index.html#subsetting-1",
    "href": "index.html#subsetting-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Subsetting",
    "text": "Subsetting\n\n\nData Frames\n\n\nx[i, ] Extract line i\n\n\nx[, j] Extract column/variable j\n\n\nx[i, j] Extract line i from column/variable j\n\n\n\n\n\n\ndata &lt;- data.frame(a = c(1, 2), b = c(4, 5))\n\ndata\n#&gt;   a b\n#&gt; 1 1 4\n#&gt; 2 2 5\n\n\ndata[\"a\"]\n#&gt;   a\n#&gt; 1 1\n#&gt; 2 2\n\n\ndata[[\"a\"]] # == data$a\n#&gt; [1] 1 2\n\n\ndata[1, ]\n#&gt;   a b\n#&gt; 1 1 4\n\n\ndata[, 1]\n#&gt; [1] 1 2\n\n\ndata[1, 1]\n#&gt; [1] 1"
  },
  {
    "objectID": "index.html#special-values",
    "href": "index.html#special-values",
    "title": "An Introduction to the R Programming Language",
    "section": "Special Values",
    "text": "Special Values\n\n\nNA (Not Available)\nMissing values must be explicitly declared in R. For that R uses the NA value.\nNA comes in different flavors, for example: NA_integer_, NA_real_, NA_character_, NA_complex_.\nIf you use just NA, R will use the most appropriate type.\n\nc(1, NA, 3)\n#&gt; [1]  1 NA  3\n\n\nis.na(c(1, NA, 3))\n#&gt; [1] FALSE  TRUE FALSE\n\n\n\n\nNaN (Not a Number)\n\n0 / 0\n#&gt; [1] NaN\n\n\nis.nan(0 / 0)\n#&gt; [1] TRUE\n\n\nInf (Infinite)\n\n1 / 0\n#&gt; [1] Inf\n\n\n-1 / 0\n#&gt; [1] -Inf\n\n\nis.infinite(1 / 0)\n#&gt; [1] TRUE\n\n\n\nTip: See the naniar package."
  },
  {
    "objectID": "index.html#pipes",
    "href": "index.html#pipes",
    "title": "An Introduction to the R Programming Language",
    "section": "Pipes",
    "text": "Pipes\n\n\nR Native Pipe(Introduced in R 4.1.0)\n\nobject |&gt; function()\nobject |&gt; function(1, par = _)\n\n\npi |&gt;\n  round() |&gt;\n  rep(\"pi\", times = _)\n#&gt; [1] \"pi\" \"pi\" \"pi\"\n\n\n\n\nmagrittr Pipe\n\nobject %&gt;% function()\nobject %&gt;% function(1, par = .)\nobject %&gt;% function(1, .)\n\n\nlibrary(magrittr)\n\n\npi %&gt;%\n  round() %&gt;%\n  rep(\"pi\", times = .)\n#&gt; [1] \"pi\" \"pi\" \"pi\"\n\n\n\nClick here to learn the differences between the base R and magrittr pipes."
  },
  {
    "objectID": "index.html#control-flow-choices",
    "href": "index.html#control-flow-choices",
    "title": "An Introduction to the R Programming Language",
    "section": "Control Flow: Choices",
    "text": "Control Flow: Choices\nif (condition) true_action\nif (condition) true_action else false_action\n\n\n\nx &lt;- 60\n\nif (x &gt; 90) {\n    \"A\"\n  } else if (x &gt; 80) {\n    \"B\"\n  } else if (x &gt; 50 && x &lt; 100) {\n    \"C\"\n  } else if (x &gt; 1) {\n    \"D\"\n  } else {\n    \"E\"\n  }\n#&gt; [1] \"C\"\n\n\n\n\nis.* Functions\n\nis.logical()\nis.integer()\nis.numeric()\nis.character()\n\n\nx &lt;- \"a\"\n\nif (is.numeric(x)) {\n    \"A\"\n  } else {\n    \"B\"\n  }\n#&gt; [1] \"B\""
  },
  {
    "objectID": "index.html#control-flow-loops",
    "href": "index.html#control-flow-loops",
    "title": "An Introduction to the R Programming Language",
    "section": "Control Flow: Loops",
    "text": "Control Flow: Loops\nüö® Avoid loops üö® (if you can).\nEspecially when dealing with large datasets. Use functionals instead.\n\n\nwhile (condition) perform_action\n\nx &lt;- 0\n\nwhile (x &lt; 5) {\n  x &lt;- x + 1\n  print(x)\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\n\nfor (item in vector) perform_action\n\nfor (i in 1:5) {\n  print(i)\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5"
  },
  {
    "objectID": "index.html#functions",
    "href": "index.html#functions",
    "title": "An Introduction to the R Programming Language",
    "section": "Functions",
    "text": "Functions\nname &lt;- function(parameter_1, parameter_2, ...) expression\n\n\nThe last evaluated expression is the return value of the function.\nYou can use return() to return a value before the end of the function, but this is a bad practice.\n\nfoo &lt;- function(x) {\n  x + 1\n}\n\nfoo(9)\n#&gt; [1] 10\n\n\n\n\n\nfoo &lt;- function(x) {\n  return(x + 1)\n\n  \"a\"\n}\n\nfoo(9)\n#&gt; [1] 10\n\n\nShorthand Notation(Introduced in R 4.1.0)\n\nfoo &lt;- function(x) x(9)\n\nfoo(\\(x) x + 1)\n#&gt; [1] 10"
  },
  {
    "objectID": "index.html#functionals",
    "href": "index.html#functionals",
    "title": "An Introduction to the R Programming Language",
    "section": "Functionals",
    "text": "Functionals\n\n\nA functional is a function that takes a function as an input and returns a vector as output (Wickham, 2019).\nIt makes the work of the programmer easier, because it allows to apply a function to a vector without the need of a loop. Because these functions are usually written in C (a low-level programminng language), they are very fast.\nR have native functionals (e.g., lapply()), but prefer solutions from the purrr package.\n\n\n\n\ntriple &lt;- function(x) x * 3\n\n\nwith_for_loop &lt;- function(x) {\n  out &lt;- numeric()\n  for (i in x) out &lt;- c(out, triple(i))\n  out\n}\n\n\nlibrary(purrr)\n\nwith_map &lt;- function(x) map_dbl(x, triple)\n\n\nlibrary(microbenchmark)\n\nmicrobenchmark(\n  with_for_loop(1:1000),\n  with_map(1:1000),\n  times = 100,\n  check = \"equal\"\n)\n#&gt; Unit: microseconds\n#&gt;                   expr     min       lq      mean   median       uq        max\n#&gt;  with_for_loop(1:1000) 902.153 1134.307 2893.9184 1270.279 1494.831 123181.670\n#&gt;       with_map(1:1000) 360.080  448.497  537.5125  513.731  578.594   1480.732\n#&gt;  neval cld\n#&gt;    100   a\n#&gt;    100   a"
  },
  {
    "objectID": "index.html#enviroments",
    "href": "index.html#enviroments",
    "title": "An Introduction to the R Programming Language",
    "section": "Enviroments",
    "text": "Enviroments\nScoping: The act of finding the value associated with a name.\n\n\n\nx &lt;- 10\n\nfoo &lt;- function() {\n  x &lt;- 20\n\n  x\n}\n\nfoo()\n#&gt; [1] 20\n\n\n\n\n\nfoo &lt;- function() {\n  x &lt;&lt;- 50\n\n  invisible()\n}\n\nfoo()\nx\n#&gt; [1] 50"
  },
  {
    "objectID": "index.html#packages",
    "href": "index.html#packages",
    "title": "An Introduction to the R Programming Language",
    "section": "Packages",
    "text": "Packages\n\n\nThe Unix philosophy\nEach program must do one thing well (McIlroy et al., 1978).\nIn R, the fundamental unit of shareable code is the package.\nA package bundles together code, data, documentation, and tests, and is easy to share with others (Wickham & Bryan, 2023).\nDocumentation example:The mctq R package.\n\n\n\ninstall.packages(\"package_name\")\n\nlibrary(\"package_name\")\n\nlibrary(hms)\nlibrary(lubridate)\nlibrary(mctq)\n\n\nso(parse_hm(\"23:00\"), dhours(2))\n#&gt; 01:00:00\n\n\n\npackage_name::function_name()\n\nhms::parse_hm(\"23:00\")\n#&gt; 23:00:00\n\n\n\n\nNote: Other programming languages refer to packages as libraries."
  },
  {
    "objectID": "index.html#packages-1",
    "href": "index.html#packages-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Packages",
    "text": "Packages\nR is just the core. It needs packages to do anything useful.\nA tipycal installation of R comes with a set of packages, like:\n\n\nbase: Basic R functions (e.g., sum())\n\ndatasets: Some datasets for testing and teaching (e.g., mtcars)\n\ngraphics: The basic graphics functions (e.g., plot())\n\ngrDevices: The graphics devices (e.g., pdf())\n\nmethods: The built-in object-oriented programming system\n\nparallel: Support for parallel computation\n\nstats: Basic statistical functions (e.g., t.test())\n\nutils: Utility functions (e.g., install.packages())"
  },
  {
    "objectID": "index.html#other-kind-of-objects",
    "href": "index.html#other-kind-of-objects",
    "title": "An Introduction to the R Programming Language",
    "section": "Other Kind of Objects",
    "text": "Other Kind of Objects\n\n\nBased on the atomic types, we can create other types of objects.\nUsing the right kind of object in R is very important, because these objects also include methods to deal with particular types of data.\nFor example, time can be expressed in diffent ways, like linear time (e.g., durations, periods, data-time, intervals) and circular time (e.g., time of day). We can also have time series, which are a sequence of data points taken at successive points in time.\n\n\n\nDate(Days since 1970-01-01 (UNIX epoch))\n\nas.Date(\"1970-01-01\") |&gt; as.numeric()\n#&gt; [1] 0\n\n\nas.Date(\"1970-01-01\") + 1\n#&gt; [1] \"1970-01-02\"\n\n\nPOSIXct(Seconds since 1970-01-01 (UNIX epoch))\n\nas.POSIXct(\"1970-01-01 00:00:00\", tz = \"UTC\") |&gt;\n  as.numeric()\n#&gt; [1] 0\n\n\nas.POSIXct(\"1970-01-01 00:00:00\", tz = \"UTC\") + 1\n#&gt; [1] \"1970-01-01 00:00:01 UTC\""
  },
  {
    "objectID": "index.html#commenting",
    "href": "index.html#commenting",
    "title": "An Introduction to the R Programming Language",
    "section": "Commenting",
    "text": "Commenting\nüö® Only if necessary üö®\nYour code must speak for itself.\nIn data analysis code, only use comments to record important things. If you need comments to explain what your code is doing, consider rewriting your code to be clearer (Wickham, n.d.-a).\n\n# This is a comment.\n\n1 + 1 # This is also a comment.\n\n# 1 + 1 # You can also comment code that you don't want to run."
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "An Introduction to the R Programming Language",
    "section": "Documentation",
    "text": "Documentation\nOne the most important things in programming is to know how to find help. In R, you can use the help() function to get help on a function or package.\nSince R has more an academic focus, documentation is usually plentiful and very well written.\n\nhelp(mean)\n?mean\n\n\nDocumentation Websites: The mctq R package documentation."
  },
  {
    "objectID": "index.html#the-tidyverse",
    "href": "index.html#the-tidyverse",
    "title": "An Introduction to the R Programming Language",
    "section": "The Tidyverse",
    "text": "The Tidyverse\n\nTidyverse is a collection of R packages designed for data science. All packages share an underlying design philosophy (The Tidy Manifesto), grammar, and data structures.\nIt was created by Hadley Wickham, a prominent figure in the R community and author of several key references for this course. Hadley Wickham‚Äôs contributions have significantly shaped modern R programming."
  },
  {
    "objectID": "index.html#main-tidyverse-packages",
    "href": "index.html#main-tidyverse-packages",
    "title": "An Introduction to the R Programming Language",
    "section": "Main Tidyverse Packages",
    "text": "Main Tidyverse Packages\nThe Tidyverse also has a meta-package that installs or load the most important packages from the collection.\n\n\ninstall.packages(\"tidyverse\")\n\nlibrary(\"tidyverse\")\n\n\n\nreadr: Read flat files (csv, tsv, fwf) into R.\n\nstringr: A fresh approach to string manipulation in R.\n\nlubridate: Make working with dates in R just that little bit easier.\n\ndplyr: A grammar of data manipulation.\n\npurrr: A functional programming toolkit for R.\n\nforcats: Tools for working with categorical variables (factors).\n\nggplot2: An implementation of the Grammar of Graphics in R."
  },
  {
    "objectID": "index.html#the-ropensci",
    "href": "index.html#the-ropensci",
    "title": "An Introduction to the R Programming Language",
    "section": "The rOpenSci",
    "text": "The rOpenSci\n\nrOpenSci is a non-profit initiative founded in 2011 that brings together a community of researchers and developers committed to open science. They create and maintain high-quality R packages that provide access to data and tools from diverse sources, ensuring reliability and reproducibility in scientific research.\nAll packages go through a peer-review process, which ensures that they are well written and reliable.\nExample: mctq R package peer-review."
  },
  {
    "objectID": "index.html#base-r-solutions",
    "href": "index.html#base-r-solutions",
    "title": "An Introduction to the R Programming Language",
    "section": "Base R Solutions",
    "text": "Base R Solutions\nYou can do most of the things you need with the packages that come bundled with R. However, that is not the most efficient way to do things today.\nIn this course we are going to focus on the Tidyverse and rOpenSci packages, which are the most modern and efficient way to work with data in R.\nIf you want a depper understanding of the R language, we encourage you to explore the base R solutions."
  },
  {
    "objectID": "index.html#best-practices",
    "href": "index.html#best-practices",
    "title": "An Introduction to the R Programming Language",
    "section": "Best Practices",
    "text": "Best Practices\nYou can learn a lot about a person just by looking at their code üëÄ.\n\n\nTidyverse Style Guide\n\nVariable and function names should use only lowercase letters, numbers, and _. Use underscores (_) (so called snake case) to separate words within a name.\n\n# Good\nday_one\nday_1\n\n# Bad\nDayOne\ndayone\n\n\n\nTidy Design Principles\nThe tidyverse has four guiding principles:\n\nIt is human centered.\nIt is consistent.\nIt is composable.\nIt is inclusive."
  },
  {
    "objectID": "index.html#how-to-learn-more-1",
    "href": "index.html#how-to-learn-more-1",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from Wickham et al. (2023) and Wickham (2019))"
  },
  {
    "objectID": "index.html#data-science",
    "href": "index.html#data-science",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Science",
    "text": "Data Science\n\n\nData science is the study of the generalizable extraction of knowledge from data (Dhar, 2023).\n\nFor some, data science is just statistics (Broman, 2013) (hype statistics). For others, it‚Äôs a new interdisciplinary field that synthesizes statistics, informatics, computing, communication, management, and sociology (Cao, 2017).\n\n\n\n\n\n\n(Reproduced from Wickham et al. (2023))"
  },
  {
    "objectID": "index.html#first-things-first",
    "href": "index.html#first-things-first",
    "title": "An Introduction to the R Programming Language",
    "section": "First Things First",
    "text": "First Things First\nYou only analyze or visualize data when you already have clean, tidy, and validated data.\nThe processing for getting data ready for analysis is called data munging. You can also see it as data wrangling (usually when dealing with machine learning) or, simply, data cleaning.\n\n\nData scientists, according to interviews and expert estimates, spend from 50 percent to 80 percent of their time mired in this more mundane labor of collecting and preparing unruly digital data, before it can be explored for useful nuggets (Lohr, 2014)."
  },
  {
    "objectID": "index.html#what-is-data-after-all",
    "href": "index.html#what-is-data-after-all",
    "title": "An Introduction to the R Programming Language",
    "section": "What Is Data After All?",
    "text": "What Is Data After All?\nAckoff‚Äôs DIKW pyramid (Ackoff, 1989)\nData &lt; Information &lt; Knowledge &lt; Wisdom\nData versus the interpretation of the data.\n\n\n(To learn more see: Ackoff (1989) and Rowley (2007))"
  },
  {
    "objectID": "index.html#what-is-data-after-all-1",
    "href": "index.html#what-is-data-after-all-1",
    "title": "An Introduction to the R Programming Language",
    "section": "What Is Data After All?",
    "text": "What Is Data After All?\nData is an abstraction. It‚Äôs a representation of the world around us. Without context, it has no meaning.\n\n\n(Artwork by Pablo Picasso ‚Äì Le Taureau (1945-46))"
  },
  {
    "objectID": "index.html#statistical-value-chain",
    "href": "index.html#statistical-value-chain",
    "title": "An Introduction to the R Programming Language",
    "section": "Statistical Value Chain",
    "text": "Statistical Value Chain\n\nA value chain, roughly, consists of a sequence of activities that increase the value of a product step by step. [‚Ä¶] One should realize that although the schema nicely organizes data analysis activities, in practice, the process is hardly linear (van der Loo & Jonge, 2018).\n\n\n\n(Reproduced from van der Loo & Jonge (2018))"
  },
  {
    "objectID": "index.html#raw-data",
    "href": "index.html#raw-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Raw Data",
    "text": "Raw Data\n\n\n\nWith raw data, we mean the data as it arrives at the desk of the analyst. The state of such data may of course vary enormously, depending on the data source. (van der Loo & Jonge, 2018).\n\n\nIf the researcher has made any modifications to the raw data, it is not the raw form of the data. (S. E. Ellis & Leek, 2018).\n\n\n\n\n\n\n\n\n(Photo by Unknown Author)"
  },
  {
    "objectID": "index.html#tidy-data",
    "href": "index.html#tidy-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#tidy-data-1",
    "href": "index.html#tidy-data-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#untidy-to-tidy",
    "href": "index.html#untidy-to-tidy",
    "title": "An Introduction to the R Programming Language",
    "section": "Untidy to Tidy",
    "text": "Untidy to Tidy\n\n\n(Reproduced from Wickham et al. (2023))"
  },
  {
    "objectID": "index.html#valid-data",
    "href": "index.html#valid-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Valid Data",
    "text": "Valid Data\nData validation techniques are used to ensure that data is accurate, consistent, and reliable.\n\nExamples of invalid data:\n\nImpossible values (e.g., negative age).\nInconsistent values (e.g., a person with a height of 2 meters and a weight of 20 kg).\nImprobable values (e.g., a person 200 years old).\nDuplicated values (e.g., the same person with two different ages).\n\n\nTip: Check out Mark van der Loo‚Äôs validate R package for data validation techniques."
  },
  {
    "objectID": "index.html#tabular-data",
    "href": "index.html#tabular-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Tabular Data",
    "text": "Tabular Data\n\nDaily air quality measurements in New York (May to September 1973).\n\n?airquality"
  },
  {
    "objectID": "index.html#hierarchical-data",
    "href": "index.html#hierarchical-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Hierarchical Data",
    "text": "Hierarchical Data\n\n\nData can be hierarchical, with multiple levels of organization.\n\nInterest rate representing the adjusted average rate of overnight repurchase agreements backed by Brazil‚Äôs federal government securities held in the Special System for Settlement and Custody (SELIC). Reported in % per day.\n\n\n\n\n\nlibrary(jsonlite)\n\npaste0(\n  \"https://api.bcb.gov.br/dados/serie/\",\n  \"bcdata.sgs.11\", \"/\",\n  \"dados\", \"?\",\n  \"formato=json\", \"&\",\n  \"dataInicial=01/12/2024\", \"&\",\n  \"dataFinal=03/12/2024\"\n) |&gt;\n  read_json()\n#&gt; [[1]]\n#&gt; [[1]]$data\n# [1] \"02/12/2024\"\n\n# [[1]]$valor\n# [1] \"0.041957\"\n\n\n# [[2]]\n# [[2]]$data\n# [1] \"03/12/2024\"\n\n# [[2]]$valor\n# [1] \"0.041957\""
  },
  {
    "objectID": "index.html#spatial-data",
    "href": "index.html#spatial-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Spatial Data",
    "text": "Spatial Data\n\n\nNot all data is tabular; spatial data can be very large and complex.\nExcel cannot handle spatial data, and GUI-based statistical softwares, when capable of handling spatial data, are often limited and struggles with performance issues.\n\nProjected monthly average maximum temperatures (¬∞C) for June 2021‚Äì2040, based on the global climate model (GCM) ACCESS-CM2.\n\n\n\n\n\n\n\n\n(WorldClim 2.1 data. June mean temperature (¬∞C) in South America (1970-2000))"
  },
  {
    "objectID": "index.html#spreadsheet-syndrome",
    "href": "index.html#spreadsheet-syndrome",
    "title": "An Introduction to the R Programming Language",
    "section": "Spreadsheet Syndrome",
    "text": "Spreadsheet Syndrome\n\n\nSpreadsheet syndrome is a term used to describe the problems that arise from using spreadsheets to manage data.\n\n\n\n\n\n\n\n(Artwork by 9Dots Management)"
  },
  {
    "objectID": "index.html#relational-databases",
    "href": "index.html#relational-databases",
    "title": "An Introduction to the R Programming Language",
    "section": "Relational Databases",
    "text": "Relational Databases\n\n\nDeveloped by E. F. Codd of IBM in 1970, the relational model is based on mathematical set theory and represents data as independent relations. Each relation (table) is conceptually represented as a two-dimensional structure of intersecting rows and columns. The relations are related to each other through the sharing of common entity characteristics (values in columns) (Coronel & Morris, 2019)."
  },
  {
    "objectID": "index.html#data-documentation",
    "href": "index.html#data-documentation",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Documentation",
    "text": "Data Documentation\n\n\nProper documentation is crucial for data sharing, reproducibility, and ensuring that others can understand and use your data effectively.\nHere are some examples and guides to help you document your data:\n\n\nSISVAN nutritional status dataset dictionary.\n\nGuide to Writing ‚ÄúREADME‚Äù Style Metadata.\nMetadata Standards Catalog\n\nCheck S. E. Ellis & Leek (2018) for a detailed guide on data documentation.\n\n\n\n\n\n\n\n(Adapted from S. E. Ellis & Leek (2018, Figure 1))"
  },
  {
    "objectID": "index.html#open-data-formats",
    "href": "index.html#open-data-formats",
    "title": "An Introduction to the R Programming Language",
    "section": "Open Data Formats",
    "text": "Open Data Formats\nThere are many open data formats available for researchers to use. Open can mean different things, but in this context, it means that the format is not proprietary and can be used by anyone. Here are some examples:\n\n‚ö†Ô∏è Excel files are not a open data format! ‚ö†Ô∏è\n\n\n\nTabular Data\n\nComma-Separated Values (CSV)\nR Data Serialization (RDS)\nApache Parquet\n\n\n\n\nHierarchical Data\n\nJSON\nYAML\nTOML\nXML"
  },
  {
    "objectID": "index.html#data-frames",
    "href": "index.html#data-frames",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Frames",
    "text": "Data Frames\nData frames are a special type of list used for storing data tables. They are the most common way of storing data in R.\n\n\ndata.frame(a = 1:3, b = c(\"A\", \"B\", \"C\"))\nlibrary(dplyr)\ntibble(a = 1:3, b = c(\"A\", \"B\", \"C\"))\n\n\nlibrary(mctq)\n\n?std_mctq\nView(std_mctq)"
  },
  {
    "objectID": "index.html#the-tibble-package",
    "href": "index.html#the-tibble-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The tibble Package",
    "text": "The tibble Package\n\n\n\n\ntibble is a modern take on data frames in R, offering improved usability and integration with the Tidyverse. It enhances readability while retaining essential data frame features.\ninstall.packages(\"tibble\")\n\n\n\nUsing R native data.frame class.\n\nmtcars\n#&gt;                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb\n#&gt; Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\n#&gt; Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\n#&gt; Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\n#&gt; Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\n#&gt; Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\n#&gt; Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\n#&gt; Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\n#&gt; Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\n#&gt; Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\n#&gt; Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\n#&gt; Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\n#&gt; Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\n#&gt; Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\n#&gt; Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\n#&gt; Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\n#&gt; Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\n#&gt; Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\n#&gt; Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\n#&gt; Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\n#&gt; Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\n#&gt; Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\n#&gt; Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\n#&gt; AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\n#&gt; Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\n#&gt; Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\n#&gt; Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\n#&gt; Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\n#&gt; Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n#&gt; Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\n#&gt; Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\n#&gt; Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\n#&gt; Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n\n\nUsing tibble (Tidyverse way).\n\nlibrary(dplyr) # or library(tibble)\n\nmtcars |&gt; as_tibble()\n#&gt; # A tibble: 32 √ó 11\n#&gt;      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n#&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\n#&gt;  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\n#&gt;  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\n#&gt;  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\n#&gt;  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\n#&gt;  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\n#&gt;  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n#&gt;  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\n#&gt;  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\n#&gt; 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\n#&gt; # ‚Ñπ 22 more rows"
  },
  {
    "objectID": "index.html#how-to-read-data-in-r",
    "href": "index.html#how-to-read-data-in-r",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Read Data in R",
    "text": "How to Read Data in R\nIt will depend on what king of data you are working with.\nDifferent from Excel or GUI-based statistical software, R can deal with any kind of data.\nExamples of R functions to read data:\n\nTabular data: utils::read.csv(), readr::read_csv()\n\nGeographical data: terra::vect(), st::st_read()\n\nProprietary formats: readxl::read_excel(), haven::read_dta() (Stata), haven::read_sav() (SPSS), haven::read_sas() (SAS)"
  },
  {
    "objectID": "index.html#meet-the-penguins",
    "href": "index.html#meet-the-penguins",
    "title": "An Introduction to the R Programming Language",
    "section": "Meet the Penguins",
    "text": "Meet the Penguins\n\n\n\n\nCreated by the great Allison Horst, the author of these beautiful illustrations.\ninstall.packages(\"palmerpenguins\")\n\nThe palmerpenguins data contains size measurements for three penguin species observed on three islands in the Palmer Archipelago, Antarctica.\nThese data were collected from 2007‚Äì2009 by Dr.¬†Kristen Gorman with the Palmer Station Long Term Ecological Research Program, part of th US Long Term Ecological Research Network.\nWe will use this package to get familiar with R."
  },
  {
    "objectID": "index.html#meet-the-penguins-1",
    "href": "index.html#meet-the-penguins-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Meet the Penguins",
    "text": "Meet the Penguins\n\n\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#inspecting-the-raw-data-file",
    "href": "index.html#inspecting-the-raw-data-file",
    "title": "An Introduction to the R Programming Language",
    "section": "Inspecting the Raw Data File",
    "text": "Inspecting the Raw Data File\nüïµ Known your data.\n\nClick here to download the Palmer Penguis raw data file.\nSave it in a folder named data in the root of your project.\nUsing the file manager, open the file in RStudio.\n\nThe data documentation can be accessed by running:\nlibrary(palmerpenguins)\n?penguins_raw\nYou can also use the following code to open the file in RStudio:\nlibrary(rstudioapi)\npath_to_file(\"penguins_raw.csv\") |&gt; documentOpen()"
  },
  {
    "objectID": "index.html#inspecting-the-raw-data-file-1",
    "href": "index.html#inspecting-the-raw-data-file-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Inspecting the Raw Data File",
    "text": "Inspecting the Raw Data File\nBefore importing the data to R, let‚Äôs first take a look at the content of the data file in a text editor.\n\n\npalmerpenguins-raw.csv\n\nstudyName,Sample Number,Species,Region,Island,Stage,Individual ID,Clutch Completion,Date Egg,Culmen Length (mm),Culmen Depth (mm),Flipper Length (mm),Body Mass (g),Sex,Delta 15 N (o/oo),Delta 13 C (o/oo),Comments\nPAL0708,1,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N1A1,Yes,2007-11-11,39.1,18.7,181,3750,MALE,NA,NA,Not enough blood for isotopes.\nPAL0708,2,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N1A2,Yes,2007-11-11,39.5,17.4,186,3800,FEMALE,8.94956,-24.69454,NA\nPAL0708,3,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N2A1,Yes,2007-11-16,40.3,18,195,3250,FEMALE,8.36821,-25.33302,NA\nPAL0708,4,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N2A2,Yes,2007-11-16,NA,NA,NA,NA,NA,NA,NA,Adult not sampled.\nPAL0708,5,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N3A1,Yes,2007-11-16,36.7,19.3,193,3450,FEMALE,8.76651,-25.32426,NA\nPAL0708,6,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N3A2,Yes,2007-11-16,39.3,20.6,190,3650,MALE,8.66496,-25.29805,NA\nPAL0708,7,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N4A1,No,2007-11-15,38.9,17.8,181,3625,FEMALE,9.18718,-25.21799,Nest never observed with full clutch.\nPAL0708,8,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N4A2,No,2007-11-15,39.2,19.6,195,4675,MALE,9.4606,-24.89958,Nest never observed with full clutch.\nPAL0708,9,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N5A1,Yes,2007-11-09,34.1,18.1,193,3475,NA,NA,NA,No blood sample obtained.\nPAL0708,10,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N5A2,Yes,2007-11-09,42,20.2,190,4250,NA,9.13362,-25.09368,No blood sample obtained for sexing.\nPAL0708,11,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N6A1,Yes,2007-11-09,37.8,17.1,186,3300,NA,8.63243,-25.21315,No blood sample obtained for sexing.\nPAL0708,12,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N6A2,Yes,2007-11-09,37.8,17.3,180,3700,NA,NA,NA,No blood sample obtained.\nPAL0708,13,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N7A1,Yes,2007-11-15,41.1,17.6,182,3200,FEMALE,NA,NA,Not enough blood for isotopes.\nPAL0708,14,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N7A2,Yes,2007-11-15,38.6,21.2,191,3800,MALE,NA,NA,Not enough blood for isotopes.\nPAL0708,15,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N8A1,Yes,2007-11-16,34.6,21.1,198,4400,MALE,8.55583,-25.22588,NA\nPAL0708,16,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N8A2,Yes,2007-11-16,36.6,17.8,185,3700,FEMALE,NA,NA,Not enough blood for isotopes.\nPAL0708,17,Adelie Penguin (Pygoscelis adeliae),Anvers,Torgersen,\"Adult, 1 Egg Stage\",N9A1,Yes,2007-11-12,38.7,19,195,3450,FEMALE,9.18528,-25.06691,NA"
  },
  {
    "objectID": "index.html#the-working-directory",
    "href": "index.html#the-working-directory",
    "title": "An Introduction to the R Programming Language",
    "section": "The Working Directory",
    "text": "The Working Directory\nPointing to files inside your project.\ngetwd()\n#&gt; E:\\r-course\nlist.files()\n#&gt; [1] \"data\" \"README.md\" \"LICENSE.md\" \"r-course.Rproj\"\nlist.files(\"data\")\n#&gt; [1] \"palmerpenguins-raw.csv\"\nlist.files(\"./data\")\n#&gt; [1] \"palmerpenguins-raw.csv\"\nfile &lt;- \"./data/palmerpenguins-raw.csv\"\n\nüö® Never use setwd()! üö®\n(How to detect a beginner R user)\nClick here to learn why."
  },
  {
    "objectID": "index.html#the-here-package",
    "href": "index.html#the-here-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The here Package",
    "text": "The here Package\n\n\nhere is a package that helps you use relative paths in your R projects.\nIt turns file management much easier and OS independent.\ninstall.packages(\"here\")\nlibrary(here)\nhere()\n#&gt; E:\\r-course\nhere(\"data\", \"palmerpenguins-raw.csv\")\n#&gt; E:\\r-course\\data\\palmerpenguins-raw.csv\n\n\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#the-readr-package",
    "href": "index.html#the-readr-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The readr Package",
    "text": "The readr Package\n\n\n\n\nreadr provides a fast and easy way to read rectangular data from delimited files, such as Comma-Separated Values (CSV) and Tab-Separated Values (TSV).\ninstall.packages(\"readr\")\n\n\nlibrary(readr)\n?read_csv\n?read_csv2\n?read_delim"
  },
  {
    "objectID": "index.html#importing-the-raw-data",
    "href": "index.html#importing-the-raw-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Importing the Raw Data",
    "text": "Importing the Raw Data\n\nlibrary(dplyr)\nlibrary(here)\nlibrary(readr)\n\n\ndata &lt;-\n  here(\"data\", \"palmerpenguins-raw.csv\") |&gt;\n  read_csv(col_types = cols(.default = \"c\"))\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 17\n#&gt; $ studyName             &lt;chr&gt; \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL‚Ä¶\n#&gt; $ `Sample Number`       &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10‚Ä¶\n#&gt; $ Species               &lt;chr&gt; \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie P‚Ä¶\n#&gt; $ Region                &lt;chr&gt; \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\"‚Ä¶\n#&gt; $ Island                &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgerse‚Ä¶\n#&gt; $ Stage                 &lt;chr&gt; \"Adult, 1 Egg Stage\", \"Adult, 1 Egg Stage\", \"Adu‚Ä¶\n#&gt; $ `Individual ID`       &lt;chr&gt; \"N1A1\", \"N1A2\", \"N2A1\", \"N2A2\", \"N3A1\", \"N3A2\", ‚Ä¶\n#&gt; $ `Clutch Completion`   &lt;chr&gt; \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", ‚Ä¶\n#&gt; $ `Date Egg`            &lt;chr&gt; \"2007-11-11\", \"2007-11-11\", \"2007-11-16\", \"2007-‚Ä¶\n#&gt; $ `Culmen Length (mm)`  &lt;chr&gt; \"39.1\", \"39.5\", \"40.3\", NA, \"36.7\", \"39.3\", \"38.‚Ä¶\n#&gt; $ `Culmen Depth (mm)`   &lt;chr&gt; \"18.7\", \"17.4\", \"18\", NA, \"19.3\", \"20.6\", \"17.8\"‚Ä¶\n#&gt; $ `Flipper Length (mm)` &lt;chr&gt; \"181\", \"186\", \"195\", NA, \"193\", \"190\", \"181\", \"1‚Ä¶\n#&gt; $ `Body Mass (g)`       &lt;chr&gt; \"3750\", \"3800\", \"3250\", NA, \"3450\", \"3650\", \"362‚Ä¶\n#&gt; $ Sex                   &lt;chr&gt; \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\"‚Ä¶\n#&gt; $ `Delta 15 N (o/oo)`   &lt;chr&gt; NA, \"8.94956\", \"8.36821\", NA, \"8.76651\", \"8.6649‚Ä¶\n#&gt; $ `Delta 13 C (o/oo)`   &lt;chr&gt; NA, \"-24.69454\", \"-25.33302\", NA, \"-25.32426\", \"‚Ä¶\n#&gt; $ Comments              &lt;chr&gt; \"Not enough blood for isotopes.\", NA, NA, \"Adult‚Ä¶"
  },
  {
    "objectID": "index.html#inspecting-the-raw-data",
    "href": "index.html#inspecting-the-raw-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Inspecting the Raw Data",
    "text": "Inspecting the Raw Data\ndata |&gt; View()"
  },
  {
    "objectID": "index.html#the-janitor-package",
    "href": "index.html#the-janitor-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The janitor Package",
    "text": "The janitor Package\n\n\n\n\njanitor provides simple functions for examining and cleaning dirty data.\ninstall.packages(\"janitor\")\n\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#clean_names",
    "href": "index.html#clean_names",
    "title": "An Introduction to the R Programming Language",
    "section": "clean_names()",
    "text": "clean_names()\nThe clean_names() function transforms data frame column names into machine-readable formats.\nThis makes it easier to work with the data.\n\ndata |&gt; names()\n#&gt;  [1] \"studyName\"           \"Sample Number\"       \"Species\"            \n#&gt;  [4] \"Region\"              \"Island\"              \"Stage\"              \n#&gt;  [7] \"Individual ID\"       \"Clutch Completion\"   \"Date Egg\"           \n#&gt; [10] \"Culmen Length (mm)\"  \"Culmen Depth (mm)\"   \"Flipper Length (mm)\"\n#&gt; [13] \"Body Mass (g)\"       \"Sex\"                 \"Delta 15 N (o/oo)\"  \n#&gt; [16] \"Delta 13 C (o/oo)\"   \"Comments\"\n\n\nlibrary(janitor)\n\ndata &lt;- data |&gt; clean_names()\n\n\ndata |&gt; names()\n#&gt;  [1] \"study_name\"        \"sample_number\"     \"species\"          \n#&gt;  [4] \"region\"            \"island\"            \"stage\"            \n#&gt;  [7] \"individual_id\"     \"clutch_completion\" \"date_egg\"         \n#&gt; [10] \"culmen_length_mm\"  \"culmen_depth_mm\"   \"flipper_length_mm\"\n#&gt; [13] \"body_mass_g\"       \"sex\"               \"delta_15_n_o_oo\"  \n#&gt; [16] \"delta_13_c_o_oo\"   \"comments\""
  },
  {
    "objectID": "index.html#data-masking",
    "href": "index.html#data-masking",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Masking",
    "text": "Data Masking\nMost tidyverse functions use data masking, allowing you to refer to data frame columns directly by their names (e.g., my_variable) instead of using more verbose syntax like data[[\"my_variable\"]].\nThis is part of a concept called tidy evaluation.\n\n\nlibrary(dplyr)\n\n\nsome_data &lt;- tibble(a = c(1, 2, 3), b = c(4, 5, 6))\n\n\n\n\nWith Data Masking\n\nsome_data |&gt; pull(a) # No quotes\n#&gt; [1] 1 2 3\n\n\nWithout Data Masking\n\nsome_data[[\"a\"]]\n#&gt; [1] 1 2 3"
  },
  {
    "objectID": "index.html#the-tidyr-package",
    "href": "index.html#the-tidyr-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The tidyr Package",
    "text": "The tidyr Package\n\n\n\n\ntidyr provides a set of functions that help you to tidy your data.\ninstall.packages(\"tidyr\")\n\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\n\ndata &lt;-\n  data |&gt;\n  separate_wider_delim(\n    col = stage,\n    delim = \", \",\n    names = c(\"life_stage\", \"egg_stage\"),\n  )\n\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 18\n#&gt; $ study_name        &lt;chr&gt; \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL0708‚Ä¶\n#&gt; $ sample_number     &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"‚Ä¶\n#&gt; $ species           &lt;chr&gt; \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie Pengu‚Ä¶\n#&gt; $ region            &lt;chr&gt; \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\", \"A‚Ä¶\n#&gt; $ island            &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", ‚Ä¶\n#&gt; $ life_stage        &lt;chr&gt; \"Adult\", \"Adult\", \"Adult\", \"Adult\", \"Adult\", \"Adult\"‚Ä¶\n#&gt; $ egg_stage         &lt;chr&gt; \"1 Egg Stage\", \"1 Egg Stage\", \"1 Egg Stage\", \"1 Egg ‚Ä¶\n#&gt; $ individual_id     &lt;chr&gt; \"N1A1\", \"N1A2\", \"N2A1\", \"N2A2\", \"N3A1\", \"N3A2\", \"N4A‚Ä¶\n#&gt; $ clutch_completion &lt;chr&gt; \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"No\"‚Ä¶\n#&gt; $ date_egg          &lt;chr&gt; \"2007-11-11\", \"2007-11-11\", \"2007-11-16\", \"2007-11-1‚Ä¶\n#&gt; $ culmen_length_mm  &lt;chr&gt; \"39.1\", \"39.5\", \"40.3\", NA, \"36.7\", \"39.3\", \"38.9\", ‚Ä¶\n#&gt; $ culmen_depth_mm   &lt;chr&gt; \"18.7\", \"17.4\", \"18\", NA, \"19.3\", \"20.6\", \"17.8\", \"1‚Ä¶\n#&gt; $ flipper_length_mm &lt;chr&gt; \"181\", \"186\", \"195\", NA, \"193\", \"190\", \"181\", \"195\",‚Ä¶\n#&gt; $ body_mass_g       &lt;chr&gt; \"3750\", \"3800\", \"3250\", NA, \"3450\", \"3650\", \"3625\", ‚Ä¶\n#&gt; $ sex               &lt;chr&gt; \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\", \"F‚Ä¶\n#&gt; $ delta_15_n_o_oo   &lt;chr&gt; NA, \"8.94956\", \"8.36821\", NA, \"8.76651\", \"8.66496\", ‚Ä¶\n#&gt; $ delta_13_c_o_oo   &lt;chr&gt; NA, \"-24.69454\", \"-25.33302\", NA, \"-25.32426\", \"-25.‚Ä¶\n#&gt; $ comments          &lt;chr&gt; \"Not enough blood for isotopes.\", NA, NA, \"Adult not‚Ä¶"
  },
  {
    "objectID": "index.html#the-dplyr-package",
    "href": "index.html#the-dplyr-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The dplyr Package",
    "text": "The dplyr Package\n\n\n\n\ndplyr is one the most important packages in the Tidyverse. It provides a grammar for data manipulation.\ninstall.packages(\"dplyr\")\n\n\n\n\n\nmutate(): Create, modify, and delete columns.\n\ntransmute(): Creates a new data frame containing only specified computations\n\nselect(): Keep or drop columns using their names and types.\n\nslice(): Subset rows using their positions.\n\n\n\n\nfilter(): Keep rows that match a condition.\n\narrange(): Order rows using column values.\n\nrename(): Rename columns.\n\nrelocate(): Change column order.\n\nsummarize(): Summarise each group down to one row."
  },
  {
    "objectID": "index.html#select",
    "href": "index.html#select",
    "title": "An Introduction to the R Programming Language",
    "section": "select()",
    "text": "select()\nThe select() function is used to select columns from a data frame.\nIn our case, we are not interested in using alll the variables in the raw data. We will select only the variables we need.\n\nlibrary(dplyr)\n\n\ndata &lt;-\n  data |&gt;\n  select(\n    date_egg, species, island, culmen_length_mm, culmen_depth_mm,\n    flipper_length_mm, body_mass_g, sex\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ date_egg          &lt;chr&gt; \"2007-11-11\", \"2007-11-11\", \"2007-11-16\", \"2007-11-1‚Ä¶\n#&gt; $ species           &lt;chr&gt; \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie Pengu‚Ä¶\n#&gt; $ island            &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", ‚Ä¶\n#&gt; $ culmen_length_mm  &lt;chr&gt; \"39.1\", \"39.5\", \"40.3\", NA, \"36.7\", \"39.3\", \"38.9\", ‚Ä¶\n#&gt; $ culmen_depth_mm   &lt;chr&gt; \"18.7\", \"17.4\", \"18\", NA, \"19.3\", \"20.6\", \"17.8\", \"1‚Ä¶\n#&gt; $ flipper_length_mm &lt;chr&gt; \"181\", \"186\", \"195\", NA, \"193\", \"190\", \"181\", \"195\",‚Ä¶\n#&gt; $ body_mass_g       &lt;chr&gt; \"3750\", \"3800\", \"3250\", NA, \"3450\", \"3650\", \"3625\", ‚Ä¶\n#&gt; $ sex               &lt;chr&gt; \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\", \"F‚Ä¶"
  },
  {
    "objectID": "index.html#rename",
    "href": "index.html#rename",
    "title": "An Introduction to the R Programming Language",
    "section": "rename()",
    "text": "rename()\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#rename-1",
    "href": "index.html#rename-1",
    "title": "An Introduction to the R Programming Language",
    "section": "rename()",
    "text": "rename()\nLet‚Äôs rename culmen to bill for clarity. Likewise, we‚Äôll change date_egg to year, extracting the year value in another moment.\n\nlibrary(dplyr)\n\n\ndata &lt;-\n  data |&gt;\n  rename(\n    bill_length_mm = culmen_length_mm,\n    bill_depth_mm = culmen_depth_mm,\n    year = date_egg\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ year              &lt;chr&gt; \"2007-11-11\", \"2007-11-11\", \"2007-11-16\", \"2007-11-1‚Ä¶\n#&gt; $ species           &lt;chr&gt; \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie Pengu‚Ä¶\n#&gt; $ island            &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", ‚Ä¶\n#&gt; $ bill_length_mm    &lt;chr&gt; \"39.1\", \"39.5\", \"40.3\", NA, \"36.7\", \"39.3\", \"38.9\", ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;chr&gt; \"18.7\", \"17.4\", \"18\", NA, \"19.3\", \"20.6\", \"17.8\", \"1‚Ä¶\n#&gt; $ flipper_length_mm &lt;chr&gt; \"181\", \"186\", \"195\", NA, \"193\", \"190\", \"181\", \"195\",‚Ä¶\n#&gt; $ body_mass_g       &lt;chr&gt; \"3750\", \"3800\", \"3250\", NA, \"3450\", \"3650\", \"3625\", ‚Ä¶\n#&gt; $ sex               &lt;chr&gt; \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\", \"F‚Ä¶"
  },
  {
    "objectID": "index.html#mutate",
    "href": "index.html#mutate",
    "title": "An Introduction to the R Programming Language",
    "section": "mutate()",
    "text": "mutate()\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#mutate-1",
    "href": "index.html#mutate-1",
    "title": "An Introduction to the R Programming Language",
    "section": "mutate()",
    "text": "mutate()\nThe mutate() function is used to create new columns or modify existing columns in a data frame.\nLet‚Äôs assign proper classes to the variables. We also need to transform the year column, extracting just the year value.\n\nlibrary(dplyr)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ year              &lt;chr&gt; \"2007-11-11\", \"2007-11-11\", \"2007-11-16\", \"2007-11-1‚Ä¶\n#&gt; $ species           &lt;chr&gt; \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie Pengu‚Ä¶\n#&gt; $ island            &lt;chr&gt; \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", ‚Ä¶\n#&gt; $ bill_length_mm    &lt;chr&gt; \"39.1\", \"39.5\", \"40.3\", NA, \"36.7\", \"39.3\", \"38.9\", ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;chr&gt; \"18.7\", \"17.4\", \"18\", NA, \"19.3\", \"20.6\", \"17.8\", \"1‚Ä¶\n#&gt; $ flipper_length_mm &lt;chr&gt; \"181\", \"186\", \"195\", NA, \"193\", \"190\", \"181\", \"195\",‚Ä¶\n#&gt; $ body_mass_g       &lt;chr&gt; \"3750\", \"3800\", \"3250\", NA, \"3450\", \"3650\", \"3625\", ‚Ä¶\n#&gt; $ sex               &lt;chr&gt; \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\", \"F‚Ä¶"
  },
  {
    "objectID": "index.html#mutate-2",
    "href": "index.html#mutate-2",
    "title": "An Introduction to the R Programming Language",
    "section": "mutate()",
    "text": "mutate()\n\nFor categorical variables, it is helpful to inspect their unique values.\nIf the vector contains a limited number of unique values, it is likely a good candidate to be converted into a factor for better data handling and analysis.\n\n\ndata |&gt; pull(species) |&gt; unique()\n#&gt; [1] \"Adelie Penguin (Pygoscelis adeliae)\"      \n#&gt; [2] \"Gentoo penguin (Pygoscelis papua)\"        \n#&gt; [3] \"Chinstrap penguin (Pygoscelis antarctica)\"\n\n\ndata |&gt; pull(island) |&gt; unique()\n#&gt; [1] \"Torgersen\" \"Biscoe\"    \"Dream\"\n\n\ndata |&gt; pull(sex) |&gt; unique()\n#&gt; [1] \"MALE\"   \"FEMALE\" NA"
  },
  {
    "objectID": "index.html#mutate-3",
    "href": "index.html#mutate-3",
    "title": "An Introduction to the R Programming Language",
    "section": "mutate()",
    "text": "mutate()\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(stringr)\n\n\ndata &lt;-\n  data |&gt;\n  mutate(\n    year =\n      year |&gt;\n      as.Date() |&gt;\n      year() |&gt;\n      as.integer(),\n    species =\n      case_match(\n        species,\n        \"Adelie Penguin (Pygoscelis adeliae)\" ~ \"Adelie\",\n        \"Chinstrap penguin (Pygoscelis antarctica)\" ~ \"Chinstrap\",\n        \"Gentoo penguin (Pygoscelis papua)\" ~ \"Gentoo\"\n      ) |&gt;\n      as.factor(),\n    island = as.factor(island),\n    bill_length_mm = bill_length_mm |&gt; as.numeric(),\n    bill_depth_mm = bill_depth_mm |&gt; as.numeric(),\n    flipper_length_mm = flipper_length_mm |&gt; as.integer(),\n    body_mass_g = body_mass_g |&gt; as.integer(),\n    sex =\n      sex |&gt;\n      str_to_lower() |&gt;\n      as.factor()\n  )"
  },
  {
    "objectID": "index.html#mutate-4",
    "href": "index.html#mutate-4",
    "title": "An Introduction to the R Programming Language",
    "section": "mutate()",
    "text": "mutate()\n\nlibrary(dplyr)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶"
  },
  {
    "objectID": "index.html#filter",
    "href": "index.html#filter",
    "title": "An Introduction to the R Programming Language",
    "section": "filter()",
    "text": "filter()\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#filter-1",
    "href": "index.html#filter-1",
    "title": "An Introduction to the R Programming Language",
    "section": "filter()",
    "text": "filter()\nLet‚Äôs filter the data to keep only penguins with a body mass greater than 2000 grams and a bill length less than 50 mm.\n\nlibrary(dplyr)\n\n\ndata &lt;-\n  data |&gt;\n  filter(\n    body_mass_g &gt; 2000 | is.na(body_mass_g),\n    bill_length_mm &lt; 60 | is.na(bill_length_mm)\n  )\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶"
  },
  {
    "objectID": "index.html#relocate",
    "href": "index.html#relocate",
    "title": "An Introduction to the R Programming Language",
    "section": "relocate()",
    "text": "relocate()\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#relocate-1",
    "href": "index.html#relocate-1",
    "title": "An Introduction to the R Programming Language",
    "section": "relocate()",
    "text": "relocate()\nLet‚Äôs organize our columns in a more logical order.\nThe year column is best placed next to the sex column.\n\nlibrary(dplyr)\n\n\ndata &lt;-\n  data |&gt;\n  relocate(year, .after = sex)\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "index.html#inspecting-the-valid-data",
    "href": "index.html#inspecting-the-valid-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Inspecting the Valid Data",
    "text": "Inspecting the Valid Data\ndata |&gt; View()"
  },
  {
    "objectID": "index.html#comparing-the-valid-data",
    "href": "index.html#comparing-the-valid-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Comparing the Valid Data",
    "text": "Comparing the Valid Data\n\n\n\nlibrary(palmerpenguins)\n\n\n\nidentical(data, penguins)\n#&gt; [1] TRUE\n\n\n\ndata |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶\n\n\npenguins |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "index.html#exporting-the-data",
    "href": "index.html#exporting-the-data",
    "title": "An Introduction to the R Programming Language",
    "section": "Exporting the Data",
    "text": "Exporting the Data\n\nAlways save your data in non-binary formats like csv to ensure that it can be read by other software.\nrds stands for R Data Serialization. It is a binary data format that allows you to load an object into R preserving all its attributes.\n\n\nlibrary(here)\nlibrary(readr)\n\n\nif (!dir.exists(here(\"data\"))) dir.create(here(\"data\"))\n\n\ndata |&gt; write_csv(here(\"data\", \"palmerpenguins-valid.csv\"))\n\n\ndata |&gt; write_rds(here(\"data\", \"palmerpenguins-valid.rds\"))\n\n\nTip: Store your data in research repositories like The Open Science Framework (See the osfr package). If you are working with sensitive or human data, ensure it is encrypted before storing it in the cloud (See the lockr package)."
  },
  {
    "objectID": "index.html#how-to-learn-more-2",
    "href": "index.html#how-to-learn-more-2",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from Wickham et al. (2023) and van der Loo & Jonge (2018))"
  },
  {
    "objectID": "index.html#simple-statistics",
    "href": "index.html#simple-statistics",
    "title": "An Introduction to the R Programming Language",
    "section": "Simple Statistics",
    "text": "Simple Statistics\nThe R packages that come with a typical R installation provide a set of basic statistical functions.\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\nbill_length_mm &lt;- penguins |&gt; pull(bill_length_mm)\n\n\n\nbill_length_mm |&gt; mean(na.rm = TRUE)\n#&gt; [1] 43.92193\n\n\nbill_length_mm |&gt; sd(na.rm = TRUE)\n#&gt; [1] 5.459584\n\n\nbill_length_mm |&gt; min(na.rm = TRUE)\n#&gt; [1] 32.1\n\n\nbill_length_mm |&gt; median(na.rm = TRUE)\n#&gt; [1] 44.45\n\n\nbill_length_mm |&gt; max(na.rm = TRUE)\n#&gt; [1] 59.6"
  },
  {
    "objectID": "index.html#simple-statistics-1",
    "href": "index.html#simple-statistics-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Simple Statistics",
    "text": "Simple Statistics\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\nbill_length_mm &lt;- penguins |&gt; pull(bill_length_mm)\nbill_depth_mm &lt;- penguins |&gt; pull(bill_depth_mm)\n\n\n\nbill_length_mm |&gt; quantile(na.rm = TRUE)\n#&gt;     0%    25%    50%    75%   100% \n#&gt; 32.100 39.225 44.450 48.500 59.600\n\n\nbill_length_mm |&gt; quantile(prob = 0.25, na.rm = TRUE)\n#&gt;    25% \n#&gt; 39.225\n\n\nbill_length_mm |&gt; quantile(prob = 0.75, na.rm = TRUE)\n#&gt;  75% \n#&gt; 48.5\n\n\nbill_length_mm |&gt; sum(na.rm = TRUE)\n#&gt; [1] 15021.3\n\n\nbill_length_mm |&gt; prod(na.rm = TRUE)\n#&gt; [1] Inf\n\n\ncor(bill_length_mm, bill_depth_mm, use = \"complete.obs\")\n#&gt; [1] -0.2350529"
  },
  {
    "objectID": "index.html#head-tail",
    "href": "index.html#head-tail",
    "title": "An Introduction to the R Programming Language",
    "section": "\nhead() & tail()\n",
    "text": "head() & tail()\n\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\npenguins |&gt; head(3)\n#&gt; # A tibble: 3 √ó 8\n#&gt;   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n#&gt;   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n#&gt; 1 Adelie  Torgersen           39.1          18.7               181        3750\n#&gt; 2 Adelie  Torgersen           39.5          17.4               186        3800\n#&gt; 3 Adelie  Torgersen           40.3          18                 195        3250\n#&gt; # ‚Ñπ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\npenguins |&gt; tail(3)\n#&gt; # A tibble: 3 √ó 8\n#&gt;   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n#&gt;   &lt;fct&gt;     &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n#&gt; 1 Chinstrap Dream            49.6          18.2               193        3775\n#&gt; 2 Chinstrap Dream            50.8          19                 210        4100\n#&gt; 3 Chinstrap Dream            50.2          18.7               198        3775\n#&gt; # ‚Ñπ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\npenguins |&gt;\n  pull(bill_length_mm) |&gt;\n  head(3)\n#&gt; [1] 39.1 39.5 40.3"
  },
  {
    "objectID": "index.html#slice_sample",
    "href": "index.html#slice_sample",
    "title": "An Introduction to the R Programming Language",
    "section": "slice_sample()",
    "text": "slice_sample()\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\npenguins |&gt; slice_sample(n = 15)\n#&gt; # A tibble: 15 √ó 8\n#&gt;    species   island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n#&gt;    &lt;fct&gt;     &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n#&gt;  1 Gentoo    Biscoe             48.4          14.4               203        4625\n#&gt;  2 Adelie    Dream              43.2          18.5               192        4100\n#&gt;  3 Gentoo    Biscoe             42            13.5               210        4150\n#&gt;  4 Adelie    Biscoe             41.1          18.2               192        4050\n#&gt;  5 Adelie    Biscoe             38.6          17.2               199        3750\n#&gt;  6 Chinstrap Dream              55.8          19.8               207        4000\n#&gt;  7 Adelie    Dream              39.8          19.1               184        4650\n#&gt;  8 Adelie    Dream              40.3          18.5               196        4350\n#&gt;  9 Gentoo    Biscoe             45.5          13.9               210        4200\n#&gt; 10 Adelie    Torgers‚Ä¶           36.6          17.8               185        3700\n#&gt; 11 Gentoo    Biscoe             44.5          15.7               217        4875\n#&gt; 12 Chinstrap Dream              45.2          16.6               191        3250\n#&gt; 13 Chinstrap Dream              49            19.6               212        4300\n#&gt; 14 Adelie    Biscoe             36.4          17.1               184        2850\n#&gt; 15 Gentoo    Biscoe             46.2          14.5               209        4800\n#&gt; # ‚Ñπ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "index.html#glimpse",
    "href": "index.html#glimpse",
    "title": "An Introduction to the R Programming Language",
    "section": "glimpse()",
    "text": "glimpse()\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\npenguins |&gt; glimpse()\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male‚Ä¶\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "index.html#count",
    "href": "index.html#count",
    "title": "An Introduction to the R Programming Language",
    "section": "count()",
    "text": "count()\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\npenguins |&gt; count(species, island, .drop = FALSE)\n#&gt; # A tibble: 9 √ó 3\n#&gt;   species   island        n\n#&gt;   &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt;\n#&gt; 1 Adelie    Biscoe       44\n#&gt; 2 Adelie    Dream        56\n#&gt; 3 Adelie    Torgersen    52\n#&gt; 4 Chinstrap Biscoe        0\n#&gt; 5 Chinstrap Dream        68\n#&gt; 6 Chinstrap Torgersen     0\n#&gt; 7 Gentoo    Biscoe      124\n#&gt; 8 Gentoo    Dream         0\n#&gt; 9 Gentoo    Torgersen     0"
  },
  {
    "objectID": "index.html#summarize",
    "href": "index.html#summarize",
    "title": "An Introduction to the R Programming Language",
    "section": "summarize()",
    "text": "summarize()\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\n\npenguins |&gt;\n  summarize(\n    mean = mean(flipper_length_mm, na.rm = TRUE),\n    sd = sd(flipper_length_mm, na.rm = TRUE),\n    .by = species\n  )\n#&gt; # A tibble: 3 √ó 3\n#&gt;   species    mean    sd\n#&gt;   &lt;fct&gt;     &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1 Adelie     190.  6.54\n#&gt; 2 Gentoo     217.  6.48\n#&gt; 3 Chinstrap  196.  7.13"
  },
  {
    "objectID": "index.html#the-summarytools-package",
    "href": "index.html#the-summarytools-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The summarytools Package",
    "text": "The summarytools Package\n\n\n\nA simple package for descriptive statistics.\n\n\nlibrary(palmerpenguins)\nlibrary(summarytools)\n\n\npenguins |&gt; descr(bill_depth_mm)\n#&gt; Descriptive Statistics  \n#&gt; penguins  \n#&gt; N: 344  \n#&gt; \n#&gt;                     bill_depth_mm\n#&gt; ----------------- ---------------\n#&gt;              Mean           17.15\n#&gt;           Std.Dev            1.97\n#&gt;               Min           13.10\n#&gt;                Q1           15.60\n#&gt;            Median           17.30\n#&gt;                Q3           18.70\n#&gt;               Max           21.50\n#&gt;               MAD            2.22\n#&gt;               IQR            3.10\n#&gt;                CV            0.12\n#&gt;          Skewness           -0.14\n#&gt;       SE.Skewness            0.13\n#&gt;          Kurtosis           -0.92\n#&gt;           N.Valid          342.00\n#&gt;                 N          344.00\n#&gt;         Pct.Valid           99.42"
  },
  {
    "objectID": "index.html#the-janitor-package-1",
    "href": "index.html#the-janitor-package-1",
    "title": "An Introduction to the R Programming Language",
    "section": "The janitor Package",
    "text": "The janitor Package\n\n\n\n\nThe tabyl system from the janitor package provides more control over the output compared to the summarytools package.\n\n\n\nCodelibrary(janitor)\nlibrary(knitr)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  tabyl(island, species) |&gt;\n  adorn_totals(c(\"row\", \"col\")) |&gt;\n  adorn_percentages(\"row\") |&gt;\n  adorn_pct_formatting(rounding = \"half up\", digits = 0) |&gt;\n  adorn_ns() |&gt;\n  kable()\n\n\n\nisland\nAdelie\nChinstrap\nGentoo\nTotal\n\n\n\nBiscoe\n26% (44)\n0% (0)\n74% (124)\n100% (168)\n\n\nDream\n45% (56)\n55% (68)\n0% (0)\n100% (124)\n\n\nTorgersen\n100% (52)\n0% (0)\n0% (0)\n100% (52)\n\n\nTotal\n44% (152)\n20% (68)\n36% (124)\n100% (344)"
  },
  {
    "objectID": "index.html#the-gt-package",
    "href": "index.html#the-gt-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The gt Package",
    "text": "The gt Package\n\n\n\nThe most powerful package for creating and customizing tables in R.\nIt provides a flexible grammar for table creation and styling."
  },
  {
    "objectID": "index.html#the-grammar-of-graphics",
    "href": "index.html#the-grammar-of-graphics",
    "title": "An Introduction to the R Programming Language",
    "section": "The Grammar of Graphics",
    "text": "The Grammar of Graphics\n\n\nThe Grammar of Graphics, by Leland Wilkinson, set the foundation thinking about data visualization.\nWe will based this part of the course on the principles found in this book.\n\n\n\n\n\n\n\n(Book cover image from L. Wilkinson (2005))"
  },
  {
    "objectID": "index.html#the-ggplot2-package",
    "href": "index.html#the-ggplot2-package",
    "title": "An Introduction to the R Programming Language",
    "section": "The ggplot2 Package",
    "text": "The ggplot2 Package\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#the-ggplot2-package-1",
    "href": "index.html#the-ggplot2-package-1",
    "title": "An Introduction to the R Programming Language",
    "section": "The ggplot2 Package",
    "text": "The ggplot2 Package\n\n\n\nThe most powerful and flexible package for data visualization.\nA Tidyverse package based on the principles of The Grammar of Graphics.\n\n\n\n\n\n\n(Artwork by R Chart Gallery)"
  },
  {
    "objectID": "index.html#its-all-about-layers",
    "href": "index.html#its-all-about-layers",
    "title": "An Introduction to the R Programming Language",
    "section": "It‚Äôs All About Layers",
    "text": "It‚Äôs All About Layers\n\n\n\nCodelibrary(ggplot2)\nlibrary(palmerpenguins)\n\npenguins |&gt; ggplot()\n\n\n\n\n\n\n\n\n\nCodelibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = body_mass_g,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  theme(text = element_text(size = 20), legend.position = \"none\")"
  },
  {
    "objectID": "index.html#its-all-about-layers-1",
    "href": "index.html#its-all-about-layers-1",
    "title": "An Introduction to the R Programming Language",
    "section": "It‚Äôs All About Layers",
    "text": "It‚Äôs All About Layers\n\n\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = body_mass_g,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_point(size = 4) +\n  scale_color_brand_d(alpha = 0.7) +\n  theme(text = element_text(size = 20), legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = body_mass_g,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_point(size = 4) +\n  geom_smooth(\n    method = \"lm\",\n    formula = y ~ x,\n    se = FALSE,\n    linewidth = 2\n  ) +\n  labs(\n    x = \"Body Mass (g)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_color_brand_d(alpha = 0.7) +\n  theme(text = element_text(size = 20), legend.position = \"none\")"
  },
  {
    "objectID": "index.html#bar-plots",
    "href": "index.html#bar-plots",
    "title": "An Introduction to the R Programming Language",
    "section": "Bar Plots",
    "text": "Bar Plots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  ggplot(aes(x = island, fill = species)) +\n  geom_bar(alpha = 0.8) +\n  theme_minimal() +\n  facet_wrap(~species, ncol = 1) +\n  coord_flip() +\n  labs(\n    x = \"Island\",\n    y = \"Count\"\n  ) +\n  scale_fill_brand_d() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "index.html#histograms",
    "href": "index.html#histograms",
    "title": "An Introduction to the R Programming Language",
    "section": "Histograms",
    "text": "Histograms\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_histogram(bins = 30, alpha = 0.5, position = \"identity\") +\n  labs(x = \"Flipper Length (mm)\", y = \"Frequency\", fill = \"Species\") +\n  scale_fill_brand_d()"
  },
  {
    "objectID": "index.html#boxplots",
    "href": "index.html#boxplots",
    "title": "An Introduction to the R Programming Language",
    "section": "Boxplots",
    "text": "Boxplots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(bill_length_mm, species) |&gt;\n  ggplot(aes(x = species, y = bill_length_mm, fill = species)) +\n  geom_boxplot(outlier.color = get_brand_color(\"dark-red\")) +\n  geom_jitter(width = 0.2, alpha = 0.1) +\n  scale_fill_brand_d(alpha = 0.7) +\n  labs(x = \"Species\", y = \"Bill Length (mm)\", fill = \"Species\")"
  },
  {
    "objectID": "index.html#scatterplots",
    "href": "index.html#scatterplots",
    "title": "An Introduction to the R Programming Language",
    "section": "Scatterplots",
    "text": "Scatterplots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = body_mass_g,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_point(size = 2) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE) +\n  labs(\n    x = \"Body Mass (g)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_color_brand_d(alpha = 0.7)"
  },
  {
    "objectID": "index.html#facets",
    "href": "index.html#facets",
    "title": "An Introduction to the R Programming Language",
    "section": "Facets",
    "text": "Facets\n\nCodelibrary(brandr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(stringr)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, sex) |&gt;\n  mutate(sex = `levels&lt;-`(sex, str_to_title(levels(sex)))) |&gt;\n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = sex)) +\n  geom_point(size = 2) +\n  geom_smooth(\n    method = \"lm\",\n    formula = y ~ x,\n    se = FALSE,\n    color = get_brand_color(\"brown\")\n  ) +\n  labs(\n    x = \"Body Mass (g)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Sex\"\n  ) +\n  scale_color_brand_d(alpha = 0.7) +\n  facet_wrap(~species)"
  },
  {
    "objectID": "index.html#combined-plots",
    "href": "index.html#combined-plots",
    "title": "An Introduction to the R Programming Language",
    "section": "Combined Plots",
    "text": "Combined Plots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(patchwork)\nlibrary(tidyr)\n\nplot_hist &lt;-\n  penguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_histogram(bins = 30, alpha = 0.5, position = \"identity\") +\n  labs(x = \"Flipper Length (mm)\", y = \"Frequency\") +\n  scale_fill_brand_d() +\n  theme(legend.position = \"none\")\n\nplot_boxplot &lt;-\n  penguins |&gt;\n  drop_na(bill_length_mm, species) |&gt;\n  ggplot(aes(x = species, y = bill_length_mm, fill = species)) +\n  geom_boxplot(outlier.color = get_brand_color(\"dark-red\")) +\n  geom_jitter(width = 0.2, alpha = 0.1) +\n  labs(x = \"Species\", y = \"Bill Length (mm)\", fill = \"Species\") +\n  scale_fill_brand_d(alpha = 0.7) +\n  theme(axis.title.x = element_blank(), legend.position = \"none\")\n\nplot_scatter &lt;-\n  penguins |&gt;\n  drop_na(body_mass_g, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = body_mass_g,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_point(size = 2) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE) +\n  labs(\n    x = \"Body Mass (g)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_color_brand_d(alpha = 0.7) +\n  theme(legend.position = \"none\")\n\n(plot_hist + plot_boxplot) / plot_scatter + plot_annotation(tag_levels = \"A\")"
  },
  {
    "objectID": "index.html#correlation-matrices",
    "href": "index.html#correlation-matrices",
    "title": "An Introduction to the R Programming Language",
    "section": "Correlation Matrices",
    "text": "Correlation Matrices\n\nCodelibrary(brandr)\nlibrary(dplyr)\nlibrary(GGally)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  select(species, body_mass_g, ends_with(\"_mm\")) |&gt;\n  ggpairs(aes(color = species)) +\n  scale_color_brand_d(alpha = 0.7) +\n  scale_fill_brand_d(alpha = 0.7)\n\n\nThe GGally package is an extension of ggplot2."
  },
  {
    "objectID": "index.html#color-palettes",
    "href": "index.html#color-palettes",
    "title": "An Introduction to the R Programming Language",
    "section": "Color Palettes",
    "text": "Color Palettes\nColor palettes can be sequential, diverging, or qualitative (discrete). Here are some examples of two popular packages for color palettes in R.\n\n\nviridis: Colorblind-Friendly Color Maps\n\nCodelibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\nlibrary(viridis)\n\npenguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.5, position = \"identity\") +\n  scale_fill_viridis(discrete = TRUE) +\n  labs(x = \"Flipper Length (mm)\", y = \"Density\", fill = \"Species\") +\n  theme(text = element_text(size = 20), legend.position = \"none\")\n\n\n\n\n\n\n\n\nRColorBrewer: Common Color Palettes\n\nCodelibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.5, position = \"identity\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  labs(x = \"Flipper Length (mm)\", y = \"Density\", fill = \"Species\") +\n  theme(text = element_text(size = 20), legend.position = \"none\")"
  },
  {
    "objectID": "index.html#how-to-choose-the-right-vis.",
    "href": "index.html#how-to-choose-the-right-vis.",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Choose the Right Vis.",
    "text": "How to Choose the Right Vis.\nCheck out the amazing work by Yan Holtz. Visit From Data to Viz too see the diagram below and many others.\n\n\n(Artwork by Yan Holtz)"
  },
  {
    "objectID": "index.html#the-r-graph-gallery",
    "href": "index.html#the-r-graph-gallery",
    "title": "An Introduction to the R Programming Language",
    "section": "The R Graph Gallery",
    "text": "The R Graph Gallery\nAnother amazing work by Yan Holtz is the R Graph Gallery, which provides numerous examples of R graphics and how to create them.\n\n\n(Artwork by Yan Holtz)"
  },
  {
    "objectID": "index.html#how-to-learn-more-3",
    "href": "index.html#how-to-learn-more-3",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from Wickham (2016) and Chang (2018))"
  },
  {
    "objectID": "index.html#the-tidymodels-framework",
    "href": "index.html#the-tidymodels-framework",
    "title": "An Introduction to the R Programming Language",
    "section": "The Tidymodels Framework",
    "text": "The Tidymodels Framework\n\nThe Tidymodels framework is a collection of packages for modeling and machine learning using Tidyverse principles.\nIt is created by the same team that developed the tidyverse and is designed to work seamlessly with it.\nAlthough it is a relative newcomer to the R ecosystem (2018), it has quickly gained popularity due to its simplicity and consistency."
  },
  {
    "objectID": "index.html#tidymodels-packages",
    "href": "index.html#tidymodels-packages",
    "title": "An Introduction to the R Programming Language",
    "section": "Tidymodels Packages",
    "text": "Tidymodels Packages\nLike Tidyverse, Tidymodels also has a meta-package that installs or load the most important packages from the collection.\n\n\ninstall.packages(\"tidymodels\")\n\nlibrary(\"tidymodels\")\n\n\n\n\nrsample: Provides infrastructure for efficient data splitting and resampling.\n\nparsnip: A tidy, unified interface to models.\n\nrecipes: A tidy interface to data pre-processing tools for feature engineering.\n\nworkflows: A package to bundle the pre-processing, modeling, and post-processing together.\n\ninfer: A statistical grammar for inferential statistics."
  },
  {
    "objectID": "index.html#power-analysis",
    "href": "index.html#power-analysis",
    "title": "An Introduction to the R Programming Language",
    "section": "Power Analysis",
    "text": "Power Analysis\n\n\n\n\n\n\n\n\n\n\n\n\nDecision about \\(\\text{H}_{0}\\)\n\n\n\\(\\text{H}_{0}\\) True\n\n\\(\\text{H}_{0}\\) False\n\n\n\nAccept\nCorrect inference(True negative)(\\(1 - \\alpha\\))\nType II error(False negative)(\\(\\beta\\))\n\n\nReject\nType I error(False positive)(\\(\\alpha\\))\nCorrect inference(True positive)(\\(1 - \\beta\\))\n\n\n\n\n\n\n\n\n(Based on Casella & Berger (2002, p. 383))"
  },
  {
    "objectID": "index.html#power-analysis-1",
    "href": "index.html#power-analysis-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Power Analysis",
    "text": "Power Analysis\n\nCodelibrary(pwrss)\n\npwr_analysis &lt;- pwrss.t.2means(\n  mu1 = 0.2, # Cohen's d for small effect sizes\n  mu2 = 0,\n  power = 0.8,\n  alpha = 0.05,\n  welch.df = TRUE,\n  alternative = \"greater\"\n)\n#&gt;  Difference between Two means \n#&gt;  (Independent Samples t Test) \n#&gt;  H0: mu1 = mu2 \n#&gt;  HA: mu1 &gt; mu2 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 0.8 \n#&gt;   n1 = 310 \n#&gt;   n2 = 310 \n#&gt;  ------------------------------ \n#&gt;  Alternative = \"greater\" \n#&gt;  Degrees of freedom = 618 \n#&gt;  Non-centrality parameter = 2.49 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0.2\n\npower.t.test(\n  ncp = pwr_analysis$ncp,\n  df = pwr_analysis$df,\n  alpha = pwr_analysis$parms$alpha,\n  alternative = \"greater\",\n  plot = TRUE,\n  verbose = FALSE\n)"
  },
  {
    "objectID": "index.html#power-analysis-2",
    "href": "index.html#power-analysis-2",
    "title": "An Introduction to the R Programming Language",
    "section": "Power Analysis",
    "text": "Power Analysis\n\nCodelibrary(pwrss)\n\npwr_analysis &lt;- pwrss.t.2means(\n  mu1 = 0.2, # Cohen's d for small effect sizes\n  mu2 = 0,\n  power = 0.3,\n  alpha = 0.05,\n  welch.df = TRUE,\n  alternative = \"greater\",\n)\n#&gt;  Difference between Two means \n#&gt;  (Independent Samples t Test) \n#&gt;  H0: mu1 = mu2 \n#&gt;  HA: mu1 &gt; mu2 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 0.3 \n#&gt;   n1 = 64 \n#&gt;   n2 = 64 \n#&gt;  ------------------------------ \n#&gt;  Alternative = \"greater\" \n#&gt;  Degrees of freedom = 126 \n#&gt;  Non-centrality parameter = 1.131 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0.7\n\npower.t.test(\n  ncp = pwr_analysis$ncp,\n  df = pwr_analysis$df,\n  alpha = pwr_analysis$parms$alpha,\n  alternative = \"greater\",\n  plot = TRUE,\n  verbose = FALSE\n)"
  },
  {
    "objectID": "index.html#power-analysis-3",
    "href": "index.html#power-analysis-3",
    "title": "An Introduction to the R Programming Language",
    "section": "Power Analysis",
    "text": "Power Analysis\n\nCodelibrary(pwrss)\n\npwr_analysis &lt;- pwrss.t.2means(\n  mu1 = 0.2, # Cohen's d for small effect sizes\n  mu2 = 0,\n  power = 0.999,\n  alpha = 0.001,\n  welch.df = TRUE,\n  alternative = \"greater\",\n)\n#&gt;  Difference between Two means \n#&gt;  (Independent Samples t Test) \n#&gt;  H0: mu1 = mu2 \n#&gt;  HA: mu1 &gt; mu2 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 0.999 \n#&gt;   n1 = 1913 \n#&gt;   n2 = 1913 \n#&gt;  ------------------------------ \n#&gt;  Alternative = \"greater\" \n#&gt;  Degrees of freedom = 3824 \n#&gt;  Non-centrality parameter = 6.185 \n#&gt;  Type I error rate = 0.001 \n#&gt;  Type II error rate = 0.001\n\npower.t.test(\n  ncp = pwr_analysis$ncp,\n  df = pwr_analysis$df,\n  alpha = pwr_analysis$parms$alpha,\n  alternative = \"greater\",\n  plot = TRUE,\n  verbose = FALSE\n)"
  },
  {
    "objectID": "index.html#type-i-errors-alpha",
    "href": "index.html#type-i-errors-alpha",
    "title": "An Introduction to the R Programming Language",
    "section": "Type I Errors (\\(\\alpha\\))",
    "text": "Type I Errors (\\(\\alpha\\))\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#type-ii-errors-beta",
    "href": "index.html#type-ii-errors-beta",
    "title": "An Introduction to the R Programming Language",
    "section": "Type II Errors (\\(\\beta\\))",
    "text": "Type II Errors (\\(\\beta\\))\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#the-p-value-problem",
    "href": "index.html#the-p-value-problem",
    "title": "An Introduction to the R Programming Language",
    "section": "The p-value Problem",
    "text": "The p-value Problem\n\n\nLarge samples and sensitivity\nIs a difference of \\(0.00001\\) valid?\nStatistical ritual versus Statistical thinking\n\nComparison of a 95% of confidence level (\\(\\alpha = 0.05\\)) and an n-dependent p-value curve. The parameter \\(n_{\\alpha}\\) represents the minimum sample size to detect statistically significant differences among compared groups. The parameter \\(n_{\\gamma}\\) represents the convergence point of the p-value curve. When the p-value curve expresses practical differences, the area under the red curve (\\(A_{p(n)}\\)) is smaller than the area under the constant function \\(\\alpha = 0.05\\) (\\(A_{\\alpha = 0.05}\\)) when it is evaluated between \\(0\\) and \\(n_{\\gamma}\\).\n\n\n\n\n\n\n\n\n(Reproduced from G√≥mez-de-Mariscal et al. (2021, Figure 3))"
  },
  {
    "objectID": "index.html#cohens-benchmark",
    "href": "index.html#cohens-benchmark",
    "title": "An Introduction to the R Programming Language",
    "section": "Cohen‚Äôs Benchmark",
    "text": "Cohen‚Äôs Benchmark\n\n\n\n[‚Ä¶] in many circumstances, all that is intended by ‚Äúproving‚Äù the null hypothesis is that the ES [Effect Size] is not necessarily zero but small enough to be negligible(Cohen, 1988, p. 461).\n\n\n\n\n\n\n\n\n(Photo by an unknown author.)"
  },
  {
    "objectID": "index.html#cohens-benchmark-1",
    "href": "index.html#cohens-benchmark-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Cohen‚Äôs Benchmark",
    "text": "Cohen‚Äôs Benchmark\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest\nRelevant Effect Size\n\nEffect Size Classes\n\n\n\nSmall\nMedium\nLarge\n\n\n\n\nComparison of independent means\n\n\\(d\\), \\(\\Delta\\), Hedges‚Äô \\(g\\)\n\n0.20\n0.50\n0.80\n\n\nComparison of two correlations\n\\(q\\)\n0.10\n0.30\n0.50\n\n\nDifference between proportions\nCohen‚Äôs \\(g\\)\n\n0.05\n0.15\n0.25\n\n\nCorrelation\n\\(r\\)\n0.10\n0.30\n0.50\n\n\n\n\\(r^{2}\\)\n0.01\n0.09\n0.25\n\n\nCrosstabulation\n\n\\(w\\), \\(\\varphi\\), \\(V\\), \\(C\\)\n\n0.10\n0.30\n0.50\n\n\nANOVA\n\\(f\\)\n0.10\n0.25\n0.40\n\n\n\n\\(\\eta^{2}\\)\n0.01\n0.06\n0.14\n\n\nMultiple regression\n\\(R^{2}\\)\n0.02\n0.13\n0.26\n\n\n\n\\(f^{2}\\)\n0.02\n0.15\n0.35\n\n\n\nNotes: The rationale for most of these benchmarks can be found in Cohen (1988) at the following pages: Cohen‚Äôs \\(d\\) (p.¬†40), \\(q\\) (p.¬†115), Cohen‚Äôs \\(g\\) (pp.¬†147‚Äì149), \\(r\\) and \\(r^{2}\\) (pp.¬†79‚Äì80), Cohen‚Äôs \\(w\\) (pp.¬†224‚Äì227), \\(f\\) and \\(\\eta^{2}\\) (pp.¬†285‚Äì287), \\(R^{2}\\) and \\(f^{2}\\) (pp.¬†413‚Äì414).\n\n\n\n\n\n\n(Adapted from P. D. Ellis (2010). Based on Cohen (1988))"
  },
  {
    "objectID": "index.html#the-p-value-problem-example",
    "href": "index.html#the-p-value-problem-example",
    "title": "An Introduction to the R Programming Language",
    "section": "The p-value Problem: Example",
    "text": "The p-value Problem: Example\n\n\n\\(\\Delta\\text{R}^{2}\\) = 0.00388Cohen‚Äôs \\(f^{2}\\) = 0.00414\nLatitudinal cline of chronotype (Leocadio-Miguel et al., 2017).\nCritique of Leocadio-Miguel et al.¬†latitude article (Vartanian, 2025).\nThe ASA statement on p-values (Wasserstein & Lazar, 2016).\nAuthors who rely solely on the p-value demonstrate a preference for statistical rituals over statistical reasoning (Gigerenzer, 2004).\n\n\n\n\n\n\nNote: The HO score (Horne & √ñstberg, 1976) goes from 16 to 86, with higher scores indicating a preference for morningness.\n\n\n\n(Reproduced from Leocadio-Miguel et al. (2017, Figure 2))"
  },
  {
    "objectID": "index.html#what-test-should-i-use",
    "href": "index.html#what-test-should-i-use",
    "title": "An Introduction to the R Programming Language",
    "section": "What Test Should I Use?",
    "text": "What Test Should I Use?\nCheck Antoine Soetewey‚Äôs flowchart to help you decide the appropriate statistical test for your data.\n\n\n\n\n\n(Artwork by Antoine Soetewey)"
  },
  {
    "objectID": "index.html#infer-pipeline-examples",
    "href": "index.html#infer-pipeline-examples",
    "title": "An Introduction to the R Programming Language",
    "section": "\ninfer Pipeline Examples",
    "text": "infer Pipeline Examples\n\ninfer is a Tidymodels package that provides a statistical grammar for inferential statistics.\nIt also offers pipeline examples for various hypothesis tests. These pipelines can serve as a helpful starting point for implementing other types of models."
  },
  {
    "objectID": "index.html#warning",
    "href": "index.html#warning",
    "title": "An Introduction to the R Programming Language",
    "section": "‚ö†Ô∏è Warning ‚ö†Ô∏è",
    "text": "‚ö†Ô∏è Warning ‚ö†Ô∏è\nThe examples provided here are for educational purposes only.\nIn these examples, we are not verifying the assumptions underlying the statistical tests. For simplicity, we assume that the data satisfies all necessary assumptions, and the resulting models are valid.\nPlease note that the results of the statistical tests might not be valid due to these simplifications.\nIn practice, always ensure that the assumptions of the statistical tests you use are thoroughly checked and validated."
  },
  {
    "objectID": "index.html#t-test-hypothesis",
    "href": "index.html#t-test-hypothesis",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Hypothesis",
    "text": "t-Test: Hypothesis\n\n\nIs there a meaningful difference in flipper length between Adelie and Gentoo penguins?\nTo test this, we will perform a t-Test for Independent Samples using a randomization-based empirical null distribution approach.\nTo ensure practical significance, we will analyze the difference in means for its effect size, considering a 95% confidence interval.\nCohen‚Äôs benchmark for a small effect size will be used as our Minimum Effect Size (MES) (Cohen, 1988).\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\mu_{A} = \\mu_{B} \\\\\n\\text{H}_{a}: \\mu_{A} \\neq \\mu_{B} \\\\\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: d &lt; \\text{MES} \\\\\n\\text{H}_{a}: d \\geq \\text{MES} \\\\\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#t-test-boxplots",
    "href": "index.html#t-test-boxplots",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Boxplots",
    "text": "t-Test: Boxplots\n\nCodelibrary(brandr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  filter(species %in% c(\"Adelie\", \"Gentoo\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = species, y = flipper_length_mm, fill = species)) +\n  geom_boxplot(outlier.color = get_brand_color(\"dark-red\")) +\n  geom_jitter(width = 0.2, alpha = 0.1) +\n  scale_fill_brand_d(alpha = 0.7) +\n  labs(x = \"Species\", y = \"Flipper Length (mm)\", fill = \"Species\")"
  },
  {
    "objectID": "index.html#t-test-density-plots",
    "href": "index.html#t-test-density-plots",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Density Plots",
    "text": "t-Test: Density Plots\n\nCodelibrary(brandr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  filter(species %in% c(\"Adelie\", \"Gentoo\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.7) +\n  scale_fill_brand_d() +\n  labs(x = \"Flipper Length (mm)\", y = \"Density\", fill = \"Species\")"
  },
  {
    "objectID": "index.html#t-test-power-analysis",
    "href": "index.html#t-test-power-analysis",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\npenguins |&gt;\n  filter(species %in% c(\"Adelie\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  nrow()\n#&gt; [1] 151\n\n\npenguins |&gt;\n  filter(species %in% c(\"Gentoo\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  nrow()\n#&gt; [1] 123"
  },
  {
    "objectID": "index.html#t-test-power-analysis-1",
    "href": "index.html#t-test-power-analysis-1",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nlibrary(pwr)\n\n\npwr_analysis &lt;- pwr.t.test(\n  d = 0.2, # Cohen's d for small effect sizes\n  sig.level = 0.05,\n  power = 0.8,\n  type = \"two.sample\",\n  alternative = \"two.sided\"\n)\n\npwr_analysis\n#&gt; \n#&gt;      Two-sample t test power calculation \n#&gt; \n#&gt;               n = 393.4057\n#&gt;               d = 0.2\n#&gt;       sig.level = 0.05\n#&gt;           power = 0.8\n#&gt;     alternative = two.sided\n#&gt; \n#&gt; NOTE: n is number in *each* group"
  },
  {
    "objectID": "index.html#t-test-power-analysis-2",
    "href": "index.html#t-test-power-analysis-2",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nlibrary(pwr)\n\n\npwr_analysis &lt;- pwr.t.test(\n  d = 0.5, # Cohen's d for medium effect sizes\n  sig.level = 0.05,\n  power = 0.8,\n  type = \"two.sample\",\n  alternative = \"two.sided\"\n)\n\npwr_analysis\n#&gt; \n#&gt;      Two-sample t test power calculation \n#&gt; \n#&gt;               n = 63.76561\n#&gt;               d = 0.5\n#&gt;       sig.level = 0.05\n#&gt;           power = 0.8\n#&gt;     alternative = two.sided\n#&gt; \n#&gt; NOTE: n is number in *each* group"
  },
  {
    "objectID": "index.html#t-test-power-analysis-3",
    "href": "index.html#t-test-power-analysis-3",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nCodelibrary(pwr)\n\npwr_analysis |&gt;\n  plot.power.htest(\n    xlab = \"Sample Size Per Group\",\n    ylab = \"Power (1 - Beta)\",\n    main = NULL\n  )"
  },
  {
    "objectID": "index.html#t-test-observed-statistic",
    "href": "index.html#t-test-observed-statistic",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Observed Statistic",
    "text": "t-Test: Observed Statistic\n\nlibrary(dplyr)\nlibrary(infer)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\nobserved_statistic &lt;-\n  penguins |&gt;\n  filter(species %in% c(\"Gentoo\", \"Adelie\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  specify(flipper_length_mm ~ species) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  calculate(stat = \"t\", order = c(\"Gentoo\", \"Adelie\"))\n\nobserved_statistic\n#&gt; Response: flipper_length_mm (numeric)\n#&gt; Explanatory: species (factor)\n#&gt; Null Hypothesis: independence\n#&gt; # A tibble: 1 √ó 1\n#&gt;    stat\n#&gt;   &lt;dbl&gt;\n#&gt; 1  34.4"
  },
  {
    "objectID": "index.html#t-test-null-distribution",
    "href": "index.html#t-test-null-distribution",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Null Distribution",
    "text": "t-Test: Null Distribution\n\nlibrary(dplyr)\nlibrary(infer)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\nnull_dist &lt;-\n  penguins |&gt;\n  filter(species %in% c(\"Gentoo\", \"Adelie\")) |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  specify(flipper_length_mm ~ species) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"t\", order = c(\"Gentoo\", \"Adelie\"))\n\nnull_dist\n#&gt; Response: flipper_length_mm (numeric)\n#&gt; Explanatory: species (factor)\n#&gt; Null Hypothesis: independence\n#&gt; # A tibble: 1,000 √ó 2\n#&gt;    replicate    stat\n#&gt;        &lt;int&gt;   &lt;dbl&gt;\n#&gt;  1         1  1.72  \n#&gt;  2         2  0.121 \n#&gt;  3         3 -1.98  \n#&gt;  4         4  0.267 \n#&gt;  5         5  0.161 \n#&gt;  6         6  0.0241\n#&gt;  7         7  0.532 \n#&gt;  8         8 -0.954 \n#&gt;  9         9 -0.751 \n#&gt; 10        10 -0.395 \n#&gt; # ‚Ñπ 990 more rows"
  },
  {
    "objectID": "index.html#t-test-visualizing",
    "href": "index.html#t-test-visualizing",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Visualizing",
    "text": "t-Test: Visualizing\n\nCodelibrary(infer)\nlibrary(ggplot2)\n\nnull_dist |&gt;\n  visualize() +\n  shade_p_value(obs_stat = observed_statistic, direction = \"two-sided\") +\n  labs(\n    title = NULL,\n    x = \"t-statistic\",\n    y = \"Frequency\"\n  ) +\n  theme(text = element_text(size = 14))"
  },
  {
    "objectID": "index.html#t-test-p-value",
    "href": "index.html#t-test-p-value",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: p-value",
    "text": "t-Test: p-value\n\nnull_dist |&gt;\n  get_p_value(obs_stat = observed_statistic, direction = \"two-sided\")\n#&gt; # A tibble: 1 √ó 1\n#&gt;   p_value\n#&gt;     &lt;dbl&gt;\n#&gt; 1       0"
  },
  {
    "objectID": "index.html#t-test-effect-size",
    "href": "index.html#t-test-effect-size",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Effect Size",
    "text": "t-Test: Effect Size\n\n\n\nlibrary(dplyr)\nlibrary(effectsize)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\nadelie &lt;-\n  penguins |&gt;\n  filter(species == \"Adelie\") |&gt;\n  drop_na() |&gt;\n  pull(flipper_length_mm)\n\ngentoo &lt;-\n  penguins |&gt;\n  filter(species == \"Gentoo\") |&gt;\n  drop_na() |&gt;\n  pull(flipper_length_mm)\n\n\n\neffect_size &lt;-\n  cohens_d(\n    x = gentoo,\n    y = adelie,\n    mu = 0,\n    ci = 0.95,\n    alternative = \"two.sided\"\n  )\n\neffect_size\n#&gt; Cohen's d |       95% CI\n#&gt; ------------------------\n#&gt; 4.14      | [3.71, 4.57]\n#&gt; \n#&gt; - Estimated using pooled SD.\n\n\n\n\neffect_size |&gt; interpret_hedges_g(rules = \"cohen1988\")\n#&gt; Cohen's d |       95% CI | Interpretation\n#&gt; -----------------------------------------\n#&gt; 4.14      | [3.71, 4.57] |          large\n#&gt; \n#&gt; - Estimated using pooled SD.\n#&gt; - Interpretation rule: cohen1988"
  },
  {
    "objectID": "index.html#t-test-power-analysis-4",
    "href": "index.html#t-test-power-analysis-4",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nlibrary(pwrss)\n\n\npwr_analysis &lt;- pwrss.t.2means(\n  mu1 = gentoo |&gt; mean(na.rm = TRUE),\n  mu2 = adelie |&gt; mean(na.rm = TRUE),\n  sd1 = gentoo |&gt; sd(na.rm = TRUE),\n  sd2 = adelie |&gt; sd(na.rm = TRUE),\n  paired = FALSE,\n  n2 = length(adelie),\n  kappa = length(gentoo) / length(adelie),\n  power = NULL,\n  alpha = 0.05,\n  welch.df = TRUE,\n  alternative = \"not equal\"\n)\n#&gt;  Difference between Two means \n#&gt;  (Independent Samples t Test) \n#&gt;  H0: mu1 = mu2 \n#&gt;  HA: mu1 != mu2 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 1 \n#&gt;   n1 = 119 \n#&gt;   n2 = 146 \n#&gt;  ------------------------------ \n#&gt;  Alternative = \"not equal\" \n#&gt;  Degrees of freedom = 251.35 \n#&gt;  Non-centrality parameter = 33.506 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0"
  },
  {
    "objectID": "index.html#t-test-power-analysis-5",
    "href": "index.html#t-test-power-analysis-5",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Power Analysis",
    "text": "t-Test: Power Analysis\n\nCodelibrary(pwrss)\n\npower.t.test(\n  ncp = pwr_analysis$ncp,\n  df = pwr_analysis$df,\n  alpha = 0.05,\n  alternative = \"not equal\",\n  plot = TRUE,\n  verbose = FALSE\n)"
  },
  {
    "objectID": "index.html#t-test-conclusion",
    "href": "index.html#t-test-conclusion",
    "title": "An Introduction to the R Programming Language",
    "section": "t-Test: Conclusion",
    "text": "t-Test: Conclusion\n\n\nIs there a meaningful difference in flipper length between Adelie and Gentoo penguins?\nOur analysis found a statistically significant difference in means (\\(t\\) = 34.4, \\(p\\)-value &lt; 0.001). The observed effect size was very large and exceed the Minimal Effect Size (MES) threshold (\\(d\\) = 4.13, 95% CI [3.70, 4.56]).\nThe power (1 - \\(\\beta\\)) of the test is 1, indicating that the probability of a false negative is zero.\nBased on these results, we conclude that there is a meaningful difference in flipper length between Adelie and Gentoo penguins, with Gentoo penguins having significantly longer flippers. Consequently, we reject the null hypothesis in favor of the alternative hypothesis.\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\mu_{A} = \\mu_{B} \\\\\n\\text{H}_{a}: \\mu_{A} \\neq \\mu_{B} \\\\\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: d &lt; \\text{MES} \\\\\n\\text{H}_{a}: d \\geq \\text{MES} \\\\\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#anova-hypothesis",
    "href": "index.html#anova-hypothesis",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Hypothesis",
    "text": "ANOVA: Hypothesis\n\n\nIs there a meaningful difference in flipper length between Adelie, Chinstrap, and Gentoo penguins?\nTo test this, we will perform a One-Way ANOVA using a randomization-based empirical null distribution approach.\nTo ensure practical significance, we will analyze the difference in means for its effect size, considering a 95% confidence interval.\nCohen‚Äôs benchmark for a small effect size will be used as our Minimum Effect Size (MES) (Cohen, 1988).\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\mu_{A} = \\mu_{B} = \\mu_{C} \\\\\n\\text{H}_{a}: \\mu_{i} \\neq \\mu_{j}, \\ \\text{for some} \\ i, j\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: f &lt; \\text{MES} \\\\\n\\text{H}_{a}: f \\geq \\text{MES} \\\\\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#anova-boxplots",
    "href": "index.html#anova-boxplots",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Boxplots",
    "text": "ANOVA: Boxplots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = species, y = flipper_length_mm, fill = species)) +\n  geom_boxplot(outlier.color = get_brand_color(\"dark-red\")) +\n  geom_jitter(width = 0.2, alpha = 0.1) +\n  scale_fill_brand_d(alpha = 0.7) +\n  labs(x = \"Species\", y = \"Flipper Length (mm)\", fill = \"Species\")"
  },
  {
    "objectID": "index.html#anova-density-plots",
    "href": "index.html#anova-density-plots",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Density Plots",
    "text": "ANOVA: Density Plots\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  ggplot(aes(x = flipper_length_mm, fill = species)) +\n  geom_density(alpha = 0.7) +\n  scale_fill_brand_d() +\n  labs(x = \"Flipper Length (mm)\", y = \"Density\", fill = \"Species\")"
  },
  {
    "objectID": "index.html#anova-power-analysis",
    "href": "index.html#anova-power-analysis",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Power Analysis",
    "text": "ANOVA: Power Analysis\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\n\n\nadelie &lt;-\n  penguins |&gt;\n  filter(species == \"Adelie\") |&gt;\n  drop_na() |&gt;\n  pull(flipper_length_mm)\n\nadelie |&gt; length()\n#&gt; [1] 146\n\n\nchinstrap &lt;-\n  penguins |&gt;\n  filter(species == \"Chinstrap\") |&gt;\n  drop_na() |&gt;\n  pull(flipper_length_mm)\n\nchinstrap |&gt; length()\n#&gt; [1] 68\n\n\n\ngentoo &lt;-\n  penguins |&gt;\n  filter(species == \"Gentoo\") |&gt;\n  drop_na() |&gt;\n  pull(flipper_length_mm)\n\ngentoo |&gt; length()\n#&gt; [1] 119"
  },
  {
    "objectID": "index.html#anova-power-analysis-1",
    "href": "index.html#anova-power-analysis-1",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Power Analysis",
    "text": "ANOVA: Power Analysis\n\nlibrary(pwr)\n\n\npwr_analysis &lt;- pwr.anova.test(\n  k = 3,\n  f = 0.25, # Cohen's f for medium effect sizes\n  sig.level = 0.05,\n  power = 0.8\n)\n\npwr_analysis\n#&gt; \n#&gt;      Balanced one-way analysis of variance power calculation \n#&gt; \n#&gt;               k = 3\n#&gt;               n = 52.3966\n#&gt;               f = 0.25\n#&gt;       sig.level = 0.05\n#&gt;           power = 0.8\n#&gt; \n#&gt; NOTE: n is number in each group"
  },
  {
    "objectID": "index.html#anova-power-analysis-2",
    "href": "index.html#anova-power-analysis-2",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Power Analysis",
    "text": "ANOVA: Power Analysis\n\nCodelibrary(pwr)\n\npwr_analysis |&gt;\n  plot.power.htest(\n    xlab = \"Sample size per group\",\n    ylab = \"Power (1 - Beta)\",\n    main = NULL\n  )"
  },
  {
    "objectID": "index.html#anova-observed-statistic",
    "href": "index.html#anova-observed-statistic",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Observed Statistic",
    "text": "ANOVA: Observed Statistic\n\nlibrary(dplyr)\nlibrary(infer)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\nobserved_statistic &lt;-\n  penguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  specify(flipper_length_mm ~ species) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  calculate(stat = \"F\")\n\nobserved_statistic\n#&gt; Response: flipper_length_mm (numeric)\n#&gt; Explanatory: species (factor)\n#&gt; Null Hypothesis: independence\n#&gt; # A tibble: 1 √ó 1\n#&gt;    stat\n#&gt;   &lt;dbl&gt;\n#&gt; 1  595."
  },
  {
    "objectID": "index.html#anova-null-distribution",
    "href": "index.html#anova-null-distribution",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Null Distribution",
    "text": "ANOVA: Null Distribution\n\nlibrary(dplyr)\nlibrary(infer)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\n\nnull_dist &lt;-\n  penguins |&gt;\n  drop_na(flipper_length_mm, species) |&gt;\n  specify(flipper_length_mm ~ species) |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"F\")\n\nnull_dist\n#&gt; Response: flipper_length_mm (numeric)\n#&gt; Explanatory: species (factor)\n#&gt; Null Hypothesis: independence\n#&gt; # A tibble: 1,000 √ó 2\n#&gt;    replicate   stat\n#&gt;        &lt;int&gt;  &lt;dbl&gt;\n#&gt;  1         1 0.367 \n#&gt;  2         2 0.113 \n#&gt;  3         3 1.18  \n#&gt;  4         4 1.60  \n#&gt;  5         5 0.182 \n#&gt;  6         6 2.62  \n#&gt;  7         7 1.75  \n#&gt;  8         8 1.00  \n#&gt;  9         9 0.0295\n#&gt; 10        10 1.48  \n#&gt; # ‚Ñπ 990 more rows"
  },
  {
    "objectID": "index.html#anova-visualizing",
    "href": "index.html#anova-visualizing",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Visualizing",
    "text": "ANOVA: Visualizing\n\nCodelibrary(infer)\nlibrary(ggplot2)\n\nnull_dist |&gt;\n  visualize(method = \"both\") +\n  shade_p_value(\n    obs_stat = observed_statistic,\n    direction = \"greater\"\n  ) +\n  labs(\n    title = NULL,\n    x = \"F-statistic\",\n    y = \"Frequency\"\n  ) +\n  theme(text = element_text(size = 14))"
  },
  {
    "objectID": "index.html#anova-p-value",
    "href": "index.html#anova-p-value",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: p-value",
    "text": "ANOVA: p-value\n\nnull_dist |&gt;\n  get_p_value(\n    obs_stat = observed_statistic,\n    direction = \"two-sided\"\n  )\n#&gt; # A tibble: 1 √ó 1\n#&gt;   p_value\n#&gt;     &lt;dbl&gt;\n#&gt; 1       0"
  },
  {
    "objectID": "index.html#anova-tukey-hsd",
    "href": "index.html#anova-tukey-hsd",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Tukey HSD",
    "text": "ANOVA: Tukey HSD\nTukey Honest Significant Differences (HSD) test.\n\nlibrary(broom)\n\naov(flipper_length_mm ~ species, data = penguins) |&gt;\n  TukeyHSD(conf.level = 0.95) |&gt;\n  tidy()"
  },
  {
    "objectID": "index.html#anova-effect-size",
    "href": "index.html#anova-effect-size",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Effect Size",
    "text": "ANOVA: Effect Size\n\nlibrary(effectsize)\n\n\neffect_size &lt;-\n  aov(flipper_length_mm ~ species, data = penguins) |&gt;\n  cohens_f()\n\neffect_size\n#&gt; # Effect Size for ANOVA\n#&gt; \n#&gt; Parameter | Cohen's f |      95% CI\n#&gt; -----------------------------------\n#&gt; species   |      1.87 | [1.72, Inf]\n#&gt; \n#&gt; - One-sided CIs: upper bound fixed at [Inf].\n\n\neffect_size[[2]] |&gt;\n  f_to_eta2() |&gt;\n  interpret_eta_squared(rules = \"cohen1992\")\n#&gt; [1] \"large\"\n#&gt; (Rules: cohen1992)"
  },
  {
    "objectID": "index.html#anova-power-analysis-3",
    "href": "index.html#anova-power-analysis-3",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Power Analysis",
    "text": "ANOVA: Power Analysis\n\nlibrary(pwr)\n\n\npwr.anova.test(\n  k = 3,\n  n = min(length(adelie), length(chinstrap), length(gentoo)),\n  f = effect_size[[2]],\n  sig.level = 0.05\n)\n#&gt; \n#&gt;      Balanced one-way analysis of variance power calculation \n#&gt; \n#&gt;               k = 3\n#&gt;               n = 68\n#&gt;               f = 1.873274\n#&gt;       sig.level = 0.05\n#&gt;           power = 1\n#&gt; \n#&gt; NOTE: n is number in each group"
  },
  {
    "objectID": "index.html#anova-conclusion",
    "href": "index.html#anova-conclusion",
    "title": "An Introduction to the R Programming Language",
    "section": "ANOVA: Conclusion",
    "text": "ANOVA: Conclusion\n\n\nIs there a meaningful difference in flipper length between Adelie, Chinstrap, and Gentoo penguins?\nOur analysis found a statistically significant difference in means (\\(\\text{F}\\) = 595, \\(p\\)-value &lt; 0.001). The observed effect size was very large and exceed the Minimal Effect Size (MES) threshold (\\(f\\) = 1.873, 95% CI [1.72, Inf]).\nThe power (1 - \\(\\beta\\)) of the test is 1, indicating that the probability of a false negative is zero.\nBased on these results, we conclude that there is a meaningful difference in flipper length between Adelie, Chinstrap, and Gentoo penguins, with Gentoo penguins having significantly longer flippers, followed by Chinstrap penguins. Consequently, we reject the null hypothesis in favor of the alternative hypothesis.\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\mu_{A} = \\mu_{B} = \\mu_{C} \\\\\n\\text{H}_{a}: \\mu_{i} \\neq \\mu_{j}, \\ \\text{for some} \\ i, j\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: f &lt; \\text{MES} \\\\\n\\text{H}_{a}: f \\geq \\text{MES} \\\\\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#linear-reg.-hypothesis",
    "href": "index.html#linear-reg.-hypothesis",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Hypothesis",
    "text": "Linear Reg.: Hypothesis\n\n\nAdding bill_depth_mm as a predictor improve the prediction of flipper_length_mm?\nTo test this, we will use Nested Linear Models.\nTo ensure practical significance, we will analyze the delta of the adjusted \\(\\text{R}^2\\) of the models considering a 95% confidence interval.\nWe will use Cohen‚Äôs benchmark for a small effect size as our Minimum Effect Size (MES) (Cohen, 1988).\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} = 0 \\\\\n\\text{H}_{a}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} &gt; 0\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} &lt; \\text{MES} \\\\\n\\text{H}_{a}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} \\geq \\text{MES}\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#linear-reg.-power-analysis",
    "href": "index.html#linear-reg.-power-analysis",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Power Analysis",
    "text": "Linear Reg.: Power Analysis\n\nlibrary(pwrss)\nlibrary(tidyr)\n\n\npenguins |&gt;\n  drop_na(flipper_length_mm, bill_length_mm, bill_depth_mm) |&gt;\n  nrow()\n#&gt; [1] 342\n\n\npwrss.f.reg(\n  r2 = 0.02, # Cohen's f^2 for small effect sizes\n  k = 2,\n  power = 0.8,\n  alpha = 0.05\n)\n#&gt;  Linear Regression (F test) \n#&gt;  R-squared Deviation from 0 (zero) \n#&gt;  H0: r2 = 0 \n#&gt;  HA: r2 &gt; 0 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 0.8 \n#&gt;   n = 476 \n#&gt;  ------------------------------ \n#&gt;  Numerator degrees of freedom = 2 \n#&gt;  Denominator degrees of freedom = 472.108 \n#&gt;  Non-centrality parameter = 9.696 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0.2"
  },
  {
    "objectID": "index.html#linear-reg.-power-analysis-1",
    "href": "index.html#linear-reg.-power-analysis-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Power Analysis",
    "text": "Linear Reg.: Power Analysis\n\nlibrary(pwrss)\nlibrary(tidyr)\n\n\npenguins |&gt;\n  drop_na(flipper_length_mm, bill_length_mm, bill_depth_mm) |&gt;\n  nrow()\n#&gt; [1] 342\n\n\npwrss.f.reg(\n  r2 = 0.15, # Cohen's f^2 for medium effect sizes\n  k = 2,\n  power = 0.8,\n  alpha = 0.05\n)\n#&gt;  Linear Regression (F test) \n#&gt;  R-squared Deviation from 0 (zero) \n#&gt;  H0: r2 = 0 \n#&gt;  HA: r2 &gt; 0 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 0.8 \n#&gt;   n = 58 \n#&gt;  ------------------------------ \n#&gt;  Numerator degrees of freedom = 2 \n#&gt;  Denominator degrees of freedom = 54.7 \n#&gt;  Non-centrality parameter = 10.182 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0.2"
  },
  {
    "objectID": "index.html#linear-reg.-scatterplot-1",
    "href": "index.html#linear-reg.-scatterplot-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Scatterplot 1",
    "text": "Linear Reg.: Scatterplot 1\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  drop_na(bill_length_mm, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = bill_length_mm,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_smooth(\n    inherit.aes = FALSE,\n    mapping = aes(x = bill_length_mm, y = flipper_length_mm),\n    method = \"lm\",\n    formula = y ~ x,\n    se = FALSE,\n    color = get_brand_color(\"black\")\n  ) +\n  geom_point(size = 2) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE) +\n  labs(\n    x = \"Bill Length (mm)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_color_brand_d(alpha = 0.7)"
  },
  {
    "objectID": "index.html#linear-reg.-scatterplot-2",
    "href": "index.html#linear-reg.-scatterplot-2",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Scatterplot 2",
    "text": "Linear Reg.: Scatterplot 2\n\nCodelibrary(brandr)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(tidyr)\n\npenguins |&gt;\n  drop_na(bill_depth_mm, flipper_length_mm, species) |&gt;\n  ggplot(\n    aes(\n      x = bill_depth_mm,\n      y = flipper_length_mm,\n      color = species,\n      shape = species\n    )\n  ) +\n  geom_point(size = 2) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE) +\n  geom_smooth(\n    inherit.aes = FALSE,\n    mapping = aes(x = bill_depth_mm, y = flipper_length_mm),\n    method = \"lm\",\n    formula = y ~ x,\n    se = FALSE,\n    color = get_brand_color(\"black\")\n  ) +\n  labs(\n    x = \"Bill Depth (mm)\",\n    y = \"Flipper Length (mm)\",\n    color = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_color_brand_d(alpha = 0.7)"
  },
  {
    "objectID": "index.html#linear-reg.-prediction",
    "href": "index.html#linear-reg.-prediction",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Prediction",
    "text": "Linear Reg.: Prediction\n\nCodelibrary(brandr)\nlibrary(broom)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n# library(rutils) # github.com/danielvartan/rutils\nlibrary(tidyr)\n\ndata &lt;- penguins |&gt; drop_na(flipper_length_mm, bill_length_mm, bill_depth_mm)\n\nfit &lt;-\n  formula(flipper_length_mm ~ bill_length_mm + bill_depth_mm) |&gt;\n  lm(data)\n\nfit |&gt;\n  augment(data) |&gt;\n  ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +\n  geom_point() +\n  geom_line(\n    aes(y = .fitted, color = \"Prediction\"),\n    linewidth = 0.5,\n    alpha = 0.5,\n  ) +\n  geom_function(\n    aes(color = \"Adjusted prediction\"),\n    fun = rutils:::lm_fun(fit, fix_all_but = 1, data = data),\n    linewidth = 1\n  ) +\n  labs(\n    x = \"Bill depth (mm)\",\n    y = \"Flipper length (mm)\",\n    subtitle = rutils:::lm_str_fun(fit, fix_all_but = 1),\n    color = NULL\n  ) +\n  ggplot2::scale_color_manual(\n    values = c(\n      \"Prediction\" = get_brand_color(\"green\"),\n      \"Adjusted prediction\" = get_brand_color(\"red\")\n    )\n  )"
  },
  {
    "objectID": "index.html#linear-reg.-plane",
    "href": "index.html#linear-reg.-plane",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Plane",
    "text": "Linear Reg.: Plane\n\nCodelibrary(dplyr)\nlibrary(palmerpenguins)\nlibrary(predict3d)\nlibrary(rgl)\nlibrary(tidyr)\n\nuser_matrix &lt;-\n  dplyr::tribble(\n    ~a,         ~b,         ~c,          ~d,\n    0.6233152,  -0.7817951, -0.01657271, 0,\n    0.1739255,  0.1179437,  0.97767037,  0,\n    -0.7623830, -0.6122792, 0.20949011,  0,\n    0,          0,          0,           1\n  ) |&gt;\n  as.matrix() |&gt;\n  `colnames&lt;-`(NULL)\n\ndata &lt;- penguins |&gt; drop_na(flipper_length_mm, bill_length_mm, bill_depth_mm)\n\nformula(flipper_length_mm ~ bill_length_mm + bill_depth_mm) |&gt;\n  lm(data) |&gt;\n  predict3d(\n    xlab = \"Bill length (mm)\",\n    ylab = \"Bill depth (mm)\",\n    zlab = \"Flipper length (mm)\",\n    radius = 0.75,\n    type = \"s\",\n    color = \"red\",\n    show.subtitle = FALSE,\n    show.error = FALSE\n  )\n\nview3d(userMatrix = user_matrix, zoom = 0.9)\n\nrglwidget(elementId = \"1st\") |&gt;\n  suppressMessages() |&gt;\n  suppressWarnings()\n\n\n\n\n\nIn a multiple linear regression with two predictors, the model is fit by adjusting a plane to the data points (Use the mouse to explore)."
  },
  {
    "objectID": "index.html#linear-reg.-fit-restricted",
    "href": "index.html#linear-reg.-fit-restricted",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Fit (Restricted)",
    "text": "Linear Reg.: Fit (Restricted)\n\n\n\nlibrary(broom)\nlibrary(palmerpenguins)\nlibrary(parsnip)\n\n\nmodel &lt;-\n  linear_reg() |&gt;\n  set_engine(\"lm\")\n\n\nfit_restricted &lt;-\n  model |&gt;\n  fit(flipper_length_mm ~ bill_length_mm, data = penguins)\n\n\nfit_restricted |&gt; tidy() |&gt; adorn_rounding(5)\n#&gt; # A tibble: 2 √ó 5\n#&gt;   term           estimate std.error statistic p.value\n#&gt;   &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n#&gt; 1 (Intercept)      127.       4.67       27.2       0\n#&gt; 2 bill_length_mm     1.69     0.105      16.0       0\n\n\n\nfit_restricted_stats &lt;- fit_restricted |&gt; glance()\n\n\nfit_restricted_stats |&gt;\n  tidyr::pivot_longer(cols = dplyr::everything()) |&gt;\n  adorn_rounding(5)\n#&gt; # A tibble: 12 √ó 2\n#&gt;    name              value\n#&gt;    &lt;chr&gt;             &lt;dbl&gt;\n#&gt;  1 r.squared         0.431\n#&gt;  2 adj.r.squared     0.429\n#&gt;  3 sigma            10.6  \n#&gt;  4 statistic       257.   \n#&gt;  5 p.value           0    \n#&gt;  6 df                1    \n#&gt;  7 logLik        -1293.   \n#&gt;  8 AIC            2591.   \n#&gt;  9 BIC            2603.   \n#&gt; 10 deviance      38394.   \n#&gt; 11 df.residual     340    \n#&gt; 12 nobs            342"
  },
  {
    "objectID": "index.html#linear-reg.-fit-full",
    "href": "index.html#linear-reg.-fit-full",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Fit (Full)",
    "text": "Linear Reg.: Fit (Full)\n\n\n\nlibrary(broom)\nlibrary(palmerpenguins)\nlibrary(parsnip)\n\n\nmodel &lt;-\n  linear_reg() |&gt;\n  set_engine(\"lm\")\n\n\nfit_full &lt;-\n  model |&gt;\n  fit(flipper_length_mm ~ bill_length_mm + bill_depth_mm, data = penguins)\n\n\nfit_full |&gt; tidy() |&gt; adorn_rounding(5)\n#&gt; # A tibble: 3 √ó 5\n#&gt;   term           estimate std.error statistic p.value\n#&gt;   &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n#&gt; 1 (Intercept)      194.      6.34        30.7       0\n#&gt; 2 bill_length_mm     1.41    0.0880      16.1       0\n#&gt; 3 bill_depth_mm     -3.24    0.243      -13.3       0\n\n\n\nfit_full_stats &lt;- fit_full |&gt; glance()\n\n\nfit_full_stats |&gt;\n  tidyr::pivot_longer(cols = dplyr::everything()) |&gt;\n  adorn_rounding(5)\n#&gt; # A tibble: 12 √ó 2\n#&gt;    name              value\n#&gt;    &lt;chr&gt;             &lt;dbl&gt;\n#&gt;  1 r.squared         0.626\n#&gt;  2 adj.r.squared     0.624\n#&gt;  3 sigma             8.63 \n#&gt;  4 statistic       284.   \n#&gt;  5 p.value           0    \n#&gt;  6 df                2    \n#&gt;  7 logLik        -1221.   \n#&gt;  8 AIC            2449.   \n#&gt;  9 BIC            2465.   \n#&gt; 10 deviance      25222.   \n#&gt; 11 df.residual     339    \n#&gt; 12 nobs            342"
  },
  {
    "objectID": "index.html#linear-reg.-anova",
    "href": "index.html#linear-reg.-anova",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: ANOVA",
    "text": "Linear Reg.: ANOVA\n\nlibrary(broom)\nlibrary(janitor)\n\nanova(fit_restricted$fit, fit_full$fit) |&gt;\n  tidy() |&gt;\n  adorn_rounding(5)"
  },
  {
    "objectID": "index.html#linear-reg.-effect-size",
    "href": "index.html#linear-reg.-effect-size",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Effect Size",
    "text": "Linear Reg.: Effect Size\n\nlibrary(effectsize)\nlibrary(psychometric)\n\n\nfit_restricted_stats$adj.r.squared\n#&gt; [1] 0.4288992\n\n\nfit_restricted_stats$adj.r.squared |&gt; interpret_r2(rules = \"cohen1988\")\n#&gt; [1] \"substantial\"\n#&gt; (Rules: cohen1988)\n\n\nfit_full_stats$adj.r.squared\n#&gt; [1] 0.6237289\n\n\nfit_full_stats$adj.r.squared |&gt; interpret_r2(rules = \"cohen1988\")\n#&gt; [1] \"substantial\"\n#&gt; (Rules: cohen1988)\n\n\ndelta &lt;- fit_full_stats$adj.r.squared - fit_restricted_stats$adj.r.squared\n\ndelta\n#&gt; [1] 0.1948297"
  },
  {
    "objectID": "index.html#linear-reg.-effect-size-1",
    "href": "index.html#linear-reg.-effect-size-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Effect Size",
    "text": "Linear Reg.: Effect Size\n\nCI.Rsq(\n  rsq = delta,\n  n = penguins |&gt; nrow(),\n  k = 2\n)\n#&gt;         Rsq      SErsq       LCL       UCL\n#&gt; 1 0.1948297 0.03782495 0.1206942 0.2689653\n\n\ndelta |&gt; interpret_r2(rules = \"cohen1988\")\n#&gt; [1] \"moderate\"\n#&gt; (Rules: cohen1988)"
  },
  {
    "objectID": "index.html#linear-reg.-power-analysis-2",
    "href": "index.html#linear-reg.-power-analysis-2",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Power Analysis",
    "text": "Linear Reg.: Power Analysis\n\nlibrary(pwrss)\nlibrary(tidyr)\n\n\npwrss.f.reg(\n  r2 = fit_full_stats$adj.r.squared,\n  k = 2,\n  n =\n    penguins |&gt;\n    drop_na(flipper_length_mm, bill_length_mm, bill_depth_mm) |&gt;\n    nrow(),\n  power = NULL,\n  alpha = 0.05\n)\n#&gt;  Linear Regression (F test) \n#&gt;  R-squared Deviation from 0 (zero) \n#&gt;  H0: r2 = 0 \n#&gt;  HA: r2 &gt; 0 \n#&gt;  ------------------------------ \n#&gt;   Statistical power = 1 \n#&gt;   n = 342 \n#&gt;  ------------------------------ \n#&gt;  Numerator degrees of freedom = 2 \n#&gt;  Denominator degrees of freedom = 339 \n#&gt;  Non-centrality parameter = 566.919 \n#&gt;  Type I error rate = 0.05 \n#&gt;  Type II error rate = 0"
  },
  {
    "objectID": "index.html#linear-reg.-conclusion",
    "href": "index.html#linear-reg.-conclusion",
    "title": "An Introduction to the R Programming Language",
    "section": "Linear Reg.: Conclusion",
    "text": "Linear Reg.: Conclusion\n\n\nAdding bill_depth_mm as a predictor meaningful improve the prediction of flipper_length_mm?\nOur analysis indicates that adding bill_depth_mm as a predictor improves the model adjusted \\(\\text{R}^{2}\\) in 0.19483 (95% CI [0.12069, 0.26897]) (\\(\\text{F}\\)(2, 339) = 284, \\(p\\)-value &lt; 0.001), exceeding the Minimal Effect Size (MES) threshold.\nThe power (1 - \\(\\beta\\)) of the test is 1, indicating that the probability of a false negative is zero.\nBased on these results, we conclude that bill_depth_mm meaningful improve the prediction of flipper_length_mm. Consequently, we reject the null hypothesis in favor of the alternative hypothesis.\n\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} = 0 \\\\\n\\text{H}_{a}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} &gt; 0\n\\end{cases}\n\\]\n\\[\n\\begin{cases}\n\\text{H}_{0}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} &lt; \\text{MES} \\\\\n\\text{H}_{a}: \\Delta \\text{Adjusted} \\ \\text{R}^{2} \\geq \\text{MES}\n\\end{cases}\n\\]"
  },
  {
    "objectID": "index.html#model-diagnostics",
    "href": "index.html#model-diagnostics",
    "title": "An Introduction to the R Programming Language",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\n\nModel diagnostics are crucial!\nIt‚Äôs essential to verify that all model assumptions hold. However, a discussion on this topic is beyond the scope of this course.\nYou can find these assumptions in most statistical textbooks, or you can look at the original papers that introduced the models (e.g., fot t-Tests, see Student (1908)).\n\n\n\n\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#objective-assumption-tests",
    "href": "index.html#objective-assumption-tests",
    "title": "An Introduction to the R Programming Language",
    "section": "Objective Assumption Tests",
    "text": "Objective Assumption Tests\nüö® Avoid Using! üö®\nObjective assumption tests (e.g., Anderson‚ÄìDarling test) are not advisable for large samples, as they can be overly sensitive to minor deviations. Additionally, they might overlook visual patterns that are not captured by a single metric.\nUsually, a visual inspection of the data is the preferred approach in most cases.\nFor a straightforward critique of normality tests specifically, refer to this article by Greener (2020).\nSee also: Kozak & Piepho (2018), Schucany & Ng (2006), and Shatz (2024)."
  },
  {
    "objectID": "index.html#how-to-learn-more-4",
    "href": "index.html#how-to-learn-more-4",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Book cover image from DeGroot & Schervish (2012) and Kuhn & Silge (2022))"
  },
  {
    "objectID": "index.html#how-to-learn-more-5",
    "href": "index.html#how-to-learn-more-5",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More",
    "text": "How to Learn More\n\n\n\n\n\n\nStatQuestby Josh Starmer\n\n\n\n\n\nVery Normalby Christian Pascual"
  },
  {
    "objectID": "index.html#your-mission",
    "href": "index.html#your-mission",
    "title": "An Introduction to the R Programming Language",
    "section": "Your Mission",
    "text": "Your Mission\nAnswer the following question using the data provided:\n\nWas there a meaningful difference in ultra-processed food consumption among Brazilian children aged 2 to 4 in 2022 across the clusters B and D of the Revised Multidimensional Index for Sustainable Food Systems (MISFS-R)?"
  },
  {
    "objectID": "index.html#misfs-r-clusters",
    "href": "index.html#misfs-r-clusters",
    "title": "An Introduction to the R Programming Language",
    "section": "MISFS-R Clusters",
    "text": "MISFS-R Clusters\n\n\nThe Multidimensional Index for Sustainable Food Systems (MISFS) is a tool designed to assess the sustainability of food systems at a subnational level in Brazil, incorporating local behaviors and practices.\nThe MISFS-R is a revised version that introduces new indicators and a refined methodology for calculating the index.\nFor more details, see Carvalho et al. (2021) and Norde et al. (2023).\n\n\n\n\n\n\n\n(Adapted from Norde et al. (2023, Figure 6))"
  },
  {
    "objectID": "index.html#misfs-r-clusters-1",
    "href": "index.html#misfs-r-clusters-1",
    "title": "An Introduction to the R Programming Language",
    "section": "MISFS-R Clusters",
    "text": "MISFS-R Clusters\n\n\n(Reproduced from Norde et al. (2023, Figure 6))"
  },
  {
    "objectID": "index.html#warning-1",
    "href": "index.html#warning-1",
    "title": "An Introduction to the R Programming Language",
    "section": "‚ö†Ô∏è Warning ‚ö†Ô∏è",
    "text": "‚ö†Ô∏è Warning ‚ö†Ô∏è\nThis exercise is for educational purposes only.\nThe data used in this exercise requires further cleaning and validation to ensure its suitability for real-world applications. For the purposes of this analysis, we will assume the data is valid and reliable, though this assumption may not hold in practice.\nAdditionally, we will not verify the assumptions underlying the statistical test. To simplify the exercise, we will proceed as though all necessary assumptions are satisfied.\nPlease note that the results of the statistical test may not be valid due to these simplifications.\nIn real-world scenarios, always ensure that the assumptions of statistical tests are rigorously checked and validated before interpreting the results."
  },
  {
    "objectID": "index.html#the-data",
    "href": "index.html#the-data",
    "title": "An Introduction to the R Programming Language",
    "section": "The Data",
    "text": "The Data\n\n(If you were unable to download the data, you can access it here)"
  },
  {
    "objectID": "index.html#the-template",
    "href": "index.html#the-template",
    "title": "An Introduction to the R Programming Language",
    "section": "The Template",
    "text": "The Template\nTo assist you with this task, we have prepared a comprehensive template. You can download it here.\nThis template outlines all the essential steps required to complete the exercise.\nWe have provided a head start on the analysis, so your task is to complete the remaining sections and ensure all steps are thoroughly addressed."
  },
  {
    "objectID": "index.html#data-science-workflow",
    "href": "index.html#data-science-workflow",
    "title": "An Introduction to the R Programming Language",
    "section": "Data Science Workflow",
    "text": "Data Science Workflow\nRemember the data science workflow:\n\n\n(Reproduced from Wickham et al. (2023))"
  },
  {
    "objectID": "index.html#steps",
    "href": "index.html#steps",
    "title": "An Introduction to the R Programming Language",
    "section": "Steps",
    "text": "Steps\nüë£ Here are the steps you should follow:\n\n\n1. Open a new Quarto project.\n2. Copy the content of the template into the project‚Äôs Quarto file.\n3. Download the data.\n4. Inspect the data file.\n5. Import the data into R.\n6. Clean, tidy, and validate the data.\n7. Save the validated data.\n\n8. Conduct a brief exploratory data analysis.\n9. Conduct a t-test to compare the groups.\n10. Calculate the effect size.\n11. Perform a power analysis.\n12. Write your conclusions."
  },
  {
    "objectID": "index.html#notes-1",
    "href": "index.html#notes-1",
    "title": "An Introduction to the R Programming Language",
    "section": "Notes",
    "text": "Notes\nüßÆ Recalculate the relative frequency.\n‚ùå Remove municipalities with less than 10 monitored children.\nüôã‚Äç‚ôÇÔ∏è If you‚Äôre stuck, ask for help.\nüéâ Have fun!"
  },
  {
    "objectID": "index.html#we-hope-you-enjoyed-the-course",
    "href": "index.html#we-hope-you-enjoyed-the-course",
    "title": "An Introduction to the R Programming Language",
    "section": "We Hope You Enjoyed the Course!",
    "text": "We Hope You Enjoyed the Course!\nWe sure enjoyed teaching you!\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#now-that-youre-an-r-rock-star",
    "href": "index.html#now-that-youre-an-r-rock-star",
    "title": "An Introduction to the R Programming Language",
    "section": "Now That You‚Äôre an R Rock Star",
    "text": "Now That You‚Äôre an R Rock Star\nWe hope you feel more confident in your R programming skills and are ready to tackle new challenges. Remember, learning is a continuous journey, and the R community is here to support you.\n\nüáßüá∑ For Brazilian graduate students, consider exploring the abnt Quarto format. It helps you write your thesis or dissertation in compliance with the Brazilian Association of Technical Standards (ABNT) standards while ensuring full reproducibility. Check out an example here.\n\n\nüôã‚Äç‚ôÇÔ∏è If you have any questions or need assistance, don‚Äôt hesitate to reach out to us!"
  },
  {
    "objectID": "index.html#post-course-survey",
    "href": "index.html#post-course-survey",
    "title": "An Introduction to the R Programming Language",
    "section": "Post-Course Survey",
    "text": "Post-Course Survey"
  },
  {
    "objectID": "index.html#how-to-learn-more-6",
    "href": "index.html#how-to-learn-more-6",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More?",
    "text": "How to Learn More?\nHere are other great resources to learn more about R and programming in general.\n\nüéì Online Courses\nKon, F. (n.d.). Introdu√ß√£o √† ci√™ncia da computa√ß√£o com python ‚Äì Parte 1 [Introduction to computer science with python ‚Äì Part 1] [Online course]. Coursera. https://www.coursera.org/learn/ciencia-computacao-python-conceitos (University of S√£o Paulo, Brazil) (pt-BR)\nKon, F. (n.d.). Introdu√ß√£o √† ci√™ncia da computa√ß√£o com python ‚Äì Parte 2 [Introduction to computer science with python ‚Äì Part 2] [Online course]. Coursera. https://www.coursera.org/learn/ciencia-computacao-python-conceitos-2s (University of S√£o Paulo, Brazil) (pt-BR)\nPeng, R. D., Leek, J., & Caffo, B. (n.d.). Data science specialization. [Online course]. Coursera. https://www.coursera.org/specializations/jhu-data-science (Johns Hopkins University, United States) (en-US)"
  },
  {
    "objectID": "index.html#how-to-learn-more-7",
    "href": "index.html#how-to-learn-more-7",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More?",
    "text": "How to Learn More?\nüé• Videos\n\nCode.org. (2018, January 30). How computers work [YouTube video]. https://youtube.com/playlist?list=PLzdnOPI1iJNcsRwJhvksEo1tJqjIqWbN-&si=WkuM8c-AKI-NZ3td\n\nZaidan, G., & Saini, S. (2025, February 25). How are microchips made? [YouTube video]. TED-Ed. https://youtu.be/IkRXpFIRUl4?si=iQ7xQuFS6DZLuBY7"
  },
  {
    "objectID": "index.html#how-to-learn-more-8",
    "href": "index.html#how-to-learn-more-8",
    "title": "An Introduction to the R Programming Language",
    "section": "How to Learn More?",
    "text": "How to Learn More?\n\nüìô Books\n\nWickham, H., √áetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science: Import, tidy, transform, visualize, and model data (2nd ed.). O‚ÄôReilly Media. https://r4ds.hadley.nz\n\nBryan, J., Hester, J., Pileggi, S., & Aja, E. D. (n.d.). What they forgot to teach you about R: The stuff you need to know about R, besides data analysis. https://rstats.wtf/\n\nBryan, J. (n.d.). Happy Git and GitHub for the useR. https://happygitwithr.com/ (Strongly recommended)\n\nWickham, H. (n.d.). Tidy design principles. https://design.tidyverse.org\n\nWickham, H. (n.d.). The tidyverse style guide. Retrieved July 17, 2023, from https://style.tidyverse.org\n\nWickham, H. (2019). Advanced R (2nd ed.). CRC Press. https://adv-r.hadley.nz"
  },
  {
    "objectID": "index.html#examples-of-data-reports",
    "href": "index.html#examples-of-data-reports",
    "title": "An Introduction to the R Programming Language",
    "section": "Examples of Data Reports",
    "text": "Examples of Data Reports\n\n\n\n\n\n\nGlobal Syndemic ProjectData Report 3\n\n\n\n\n\nA Demonstration of General Linear Models Using Penguins"
  },
  {
    "objectID": "index.html#closing-remarks",
    "href": "index.html#closing-remarks",
    "title": "An Introduction to the R Programming Language",
    "section": "Closing Remarks",
    "text": "Closing Remarks\n \nThis presentation was created with the Quarto Publishing System. The code and materials are available on GitHub.\n\n\n\n\n\n(Artwork by Allison Horst)"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "An Introduction to the R Programming Language",
    "section": "References",
    "text": "References\n\nIn accordance with the American Psychological Association (APA) Style, 7th edition.\n\n\n\nAckoff, R. (1989). From data to wisdom. Journal of Applied Systems Analysis, 16, 3‚Äì9.\n\n\nBernardes, M. E. M. (2009). Ensino e aprendizagem como unidade dial√©tica na atividade pedag√≥gica. Psicologia Escolar e Educacional, 13(2), 235‚Äì242. https://doi.org/10.1590/S1413-85572009000200005\n\n\nBroman, K. (2013, April 5). Data science is statistics. The stupidest thing... https://kbroman.wordpress.com/2013/04/05/data-science-is-statistics/\n\n\nBrookshear, J. G., & Brylow, D. (2020). Computer science: An overview (13 ed., Global edition). Pearson.\n\n\nBryan, J. (n.d.). Happy Git and GitHub for the useR. https://happygitwithr.com/\n\n\nBryan, J., Hester, J., Pileggi, S., & Aja, E. D. (n.d.). What they forgot to teach you about R: The stuff you need to know about R, besides data analysis. https://rstats.wtf/\n\n\nCao, L. (2017). Data science: A comprehensive overview. ACM Computing Surveys, 50(3), 43. https://doi.org/10.1145/3076253\n\n\nCarvalho, A. M. de, Verly Jr, E., Marchioni, D. M., & Jones, A. D. (2021). Measuring sustainable food systems in Brazil: A framework and multidimensional index to evaluate socioeconomic, nutritional, and environmental aspects. World Development, 143, 105470. https://doi.org/10.1016/j.worlddev.2021.105470\n\n\nCasella, G., & Berger, R. L. (2002). Statistical inference (2nd ed.). Duxbury.\n\n\nChang, W. (2018). R graphics cookbook: Practical recipes for visualizing data (2nd ed.). O‚ÄôReilly Media. https://r-graphics.org\n\n\nCode.org. (2018, January 30). How computers work [Video recording]. https://youtube.com/playlist?list=PLzdnOPI1iJNcsRwJhvksEo1tJqjIqWbN-&si=WkuM8c-AKI-NZ3td\n\n\nCohen, J. (1988). Statistical power analysis for the behavioral sciences (2nd ed.). Lawrence Erlbaum Associates.\n\n\nCoronel, C., & Morris, S. A. (2019). Database systems: Design, implementation, and management (13th ed.). Cengage.\n\n\nDeGroot, M. H., & Schervish, M. J. (2012). Probability and statistics (OCLC: ocn502674206) (4th ed.). Addison-Wesley.\n\n\nDenning, P. J. (2005). Is computer science science? Communications of the ACM, 48(4), 27‚Äì31. https://doi.org/10.1145/1053291.1053309\n\n\nDhar, V. (2023). Data science and prediction. Communications of the ACM, 56(12), 64‚Äì73. https://doi.org/10.1145/2500499\n\n\nEllis, P. D. (Ed.). (2010). The essential guide to effect sizes: Statistical power, meta-analysis, and the interpretation of research results (a). Cambridge University Press.\n\n\nEllis, S. E., & Leek, J. T. (2018). How to share data for collaboration. The American Statistician, 72(1), 53‚Äì57. https://doi.org/10.1080/00031305.2017.1375987\n\n\nEngels, F. (2020). Dial√©tica da natureza (Traduzido do original em alem√£o Dialektik der natur (1873-1882).) (N. Schneider, Trans.). Boitempo.\n\n\nFreire, P. (2011). Pedagogia da autonomia: saberes necess√°rios √† pr√°tica educativa (OCLC: 1229931361). Paz e Terra.\n\n\nGavin, L. (2020, October 20). Big data will be dead in 5 years. Towards Data Science. https://towardsdatascience.com/big-data-will-be-dead-in-5-years-ef4344269aef\n\n\nGigerenzer, G. (2004). Mindless statistics. The Journal of Socio-Economics, 33(5), 587‚Äì606. https://doi.org/10.1016/j.socec.2004.09.033\n\n\nGO FAIR initiative. (n.d.). GO FAIR initiative: Make your data & services FAIR. GO FAIR. Retrieved June 10, 2024, from https://www.go-fair.org/\n\n\nG√≥mez-de-Mariscal, E., Guerrero, V., Sneider, A., Jayatilaka, H., Phillip, J. M., Wirtz, D., & Mu√±oz-Barrutia, A. (2021). Use of the p-values as a size-dependent function to address practical differences when analyzing large datasets. Scientific Reports, 11(1, 1), 20942. https://doi.org/10.1038/s41598-021-00199-5\n\n\nGreener, R. (2020, August 4). Stop testing for normality. Medium. https://towardsdatascience.com/stop-testing-for-normality-dba96bb73f90\n\n\nGrosser, M., Bumann, H., & Wickham, H. (2021). Advanced R solutions. CRC Press.\n\n\nHorne, J. A., & √ñstberg, O. (1976). A self-assessment questionnaire to determine morningness-eveningness in human circadian rhythms. International Journal of Chronobiology, 4(2), 97‚Äì110. https://www.ncbi.nlm.nih.gov/pubmed/1027738\n\n\nIfrah, G. (2001). The universal history of computing: From the abacus to the quantum computer (E. F. Harding, Trans.). John Wiley & Sons. (Original work published 1994)\n\n\nIhaka, R., & Gentleman, R. (1996). R: A language for data analysis and graphics. Journal of Computational and Graphical Statistics, 5(3), 299‚Äì314. https://doi.org/10.1080/10618600.1996.10474713\n\n\nKozak, M., & Piepho, H.-P. (2018). What‚Äôs normal anyway? Residual plots are more telling than significance tests when checking ANOVA assumptions. Journal of Agronomy and Crop Science, 204(1), 86‚Äì98. https://doi.org/10.1111/jac.12220\n\n\nKuhn, M., & Silge, J. (2022). Tidy modeling with R: A framework for modeling in the tidyverse (OCLC: on1338675673). O‚ÄôReilly Media. https://www.tmwr.org/\n\n\nLandau, W. (n.d.). The {targets} R package user manual.\n\n\nLeocadio-Miguel, M. A., Louzada, F. M., Duarte, L. L., Areas, R. P., Alam, M., Freire, M. V., Fontenele-Araujo, J., Menna-Barreto, L., & Pedrazzoli, M. (2017). Latitudinal cline of chronotype. Scientific Reports, 7(1), 5437. https://doi.org/10.1038/s41598-017-05797-w\n\n\nLohr, S. (2014, August 18). For big-data scientists, ‚ÄúJanitor work‚Äù is key hurdle to insights. The New York Times: Technology. https://www.nytimes.com/2014/08/18/technology/for-big-data-scientists-hurdle-to-insights-is-janitor-work.html\n\n\nMarwick, B., Boettiger, C., & Mullen, L. (2018). Packaging data analytical work reproducibly using R (and friends). The American Statistician, 72(1), 80‚Äì88. https://doi.org/10.1080/00031305.2017.1375986\n\n\nMcIlroy, M. D., Pinson, E. N., & Tague, B. A. (1978). UNIX Time-Sharing System: Forward. Bell System Technical Journal, 57(6), 1899‚Äì1904. https://archive.org/details/bstj57-6-1899/mode/2up\n\n\nMeyer, M. N. (2018). Practical tips for ethical data sharing. Advances in Methods and Practices in Psychological Science, 1(1), 131‚Äì144. https://doi.org/10.1177/2515245917747656\n\n\nNajmi, A., Sadasivam, B., & Ray, A. (2021). How to choose and interpret a statistical test? An update for budding researchers. Journal of Family Medicine and Primary Care, 10(8), 2763. https://doi.org/10.4103/jfmpc.jfmpc_433_21\n\n\nNeyman, J., & Pearson, E. S. (1928a). On the use and interpretation of certain test criteria for purposes of statistical inference: Part I. Biometrika, 20A(1/2), 175‚Äì240. https://doi.org/10.2307/2331945\n\n\nNeyman, J., & Pearson, E. S. (1928b). On the use and interpretation of certain test criteria for purposes of statistical inference: Part II. Biometrika, 20A(3/4), 263‚Äì294. https://doi.org/10.2307/2332112\n\n\nNorde, M. M., Porciuncula, L., Garrido, G., Nunes-Galbes, N. M., Sarti, F. M., Marchioni, D. M. L., & de Carvalho, A. M. (2023). Measuring food systems sustainability in heterogenous countries: The Brazilian multidimensional index updated version applicability. Sustainable Development, 31(1), 91‚Äì107. https://doi.org/10.1002/sd.2376\n\n\nPeng, R. D. (2022). R programming for data science. https://bookdown.org/rdpeng/rprogdatascience/\n\n\nPerezgonzalez, J. D. (2015). Fisher, Neyman-Pearson or NHST? A tutorial for teaching data testing. Frontiers in Psychology, 6. https://doi.org/10.3389/fpsyg.2015.00223\n\n\nPopper, K. R. (1979). Objective knowledge: An evolutionary approach. Oxford University Press. (Original work published 1972)\n\n\nPosit Team. (n.d.). RStudio: Integrated development environment for R [Computer software]. Posit Software. http://www.posit.co\n\n\nR Core Team. (n.d.). R: A language and environment for statistical computing [Computer software]. R Foundation for Statistical Computing. https://www.R-project.org\n\n\nReis, J., & Housley, M. (2022). Fundamentals of data engineering: Plan and build robust data systems. O‚ÄôReilly.\n\n\nRowley, J. (2007). The wisdom hierarchy: Representations of the DIKW hierarchy. Journal of Information Science, 33(2), 163‚Äì180. https://doi.org/10.1177/0165551506070706\n\n\nSchucany, W. R., & Ng, H. K. T. (2006). Preliminary goodness-of-fit tests for normality do not validate the one-sample Student t. Communications in Statistics - Theory and Methods, 35(12), 2275‚Äì2286. https://doi.org/10.1080/03610920600853308\n\n\nShatz, I. (2024). Assumption-checking rather than (just) testing: The importance of visualization and effect size in statistical diagnostics. Behavior Research Methods, 56(2), 826‚Äì845. https://doi.org/10.3758/s13428-023-02072-x\n\n\nSistema de Vigil√¢ncia Alimentar e Nutricional. (n.d.). Relat√≥rios de acesso p√∫blico [Data set]. Retrieved March 19, 2023, from https://sisaps.saude.gov.br/sisvan/relatoriopublico/\n\n\nStudent. (1908). The probable error of a mean. Biometrika, 6(1). https://doi.org/10.2307/2331554\n\n\nTuring, A. M. (1937). On computable numbers, with an application to the entscheidungsproblem. Proceedings of the London Mathematical Society, s2-42(1), 230‚Äì265. https://doi.org/10.1112/plms/s2-42.1.230\n\n\nvan der Loo, M., & Jonge, E. de. (2018). Statistical data cleaning with applications in R. John Wiley & Sons.\n\n\nVartanian, D. (2025). Is latitude associated with chronotype? [Corrected version (Pre-Release), University of S√£o Paulo]. https://doi.org/10.17605/OSF.IO/YGKTS\n\n\nvon Neumann, J. (1993). First draft of a report on the EDVAC. IEEE Annals of the History of Computing, 15(4), 27‚Äì75. IEEE Annals of the History of Computing. https://doi.org/10.1109/85.238389\n\n\nVygotsky, L. S. (2012). Thought and language (Publicado originalmente em 1934.) (E. Hanfmann, G. Vakar, & A. Kozulin, Trans.; Rev. exp. ed.). The MIT Press.\n\n\nWasserstein, R. L., & Lazar, N. A. (2016). The ASA statement on p-values: Context, process, and purpose. The American Statistician, 70(2). https://doi.org/10.1080/00031305.2016.1154108\n\n\nWickham, H. (n.d.-a). The tidyverse style guide. Retrieved July 17, 2023, from https://style.tidyverse.org\n\n\nWickham, H. (n.d.-b). Tidy design principles. https://design.tidyverse.org\n\n\nWickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10). https://doi.org/10.18637/jss.v059.i10\n\n\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis (2nd ed.). Springer. https://doi.org/10.1007/978-3-319-24277-4\n\n\nWickham, H. (2019). Advanced R (2nd ed.). CRC Press. https://adv-r.hadley.nz\n\n\nWickham, H. (2023, February 23). The tidy tools manifesto. Tidyverse. https://tidyverse.tidyverse.org/articles/manifesto.html\n\n\nWickham, H., & Bryan, J. (2023). R packages (2nd ed.). O‚ÄôReilly Media. https://r-pkgs.org\n\n\nWickham, H., √áetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science: Import, tidy, transform, visualize, and model data (2nd ed.). O‚ÄôReilly Media. https://r4ds.hadley.nz\n\n\nWilkinson, L. (2005). The grammar of graphics (J. Chambers, D. Hand, & W. H√§rdle, Eds.; 2nd ed.). Springer.\n\n\nWilkinson, M. D., Dumontier, M., Aalbersberg, Ij. J., Appleton, G., Axton, M., Baak, A., Blomberg, N., Boiten, J.-W., Da Silva Santos, L. B., Bourne, P. E., Bouwman, J., Brookes, A. J., Clark, T., Crosas, M., Dillo, I., Dumon, O., Edmunds, S., Evelo, C. T., Finkers, R., ‚Ä¶ Mons, B. (2016). The FAIR guiding principles for scientific data management and stewardship. Scientific Data, 3(1), 160018. https://doi.org/10.1038/sdata.2016.18\n\n\nZaidan, G., & Saini, S. (2025, February 25). How are microchips made? [Video recording]. TED-Ed. https://youtu.be/IkRXpFIRUl4?si=iQ7xQuFS6DZLuBY7"
  },
  {
    "objectID": "index.html#thank-you",
    "href": "index.html#thank-you",
    "title": "An Introduction to the R Programming Language",
    "section": "Thank you!",
    "text": "Thank you!\n\n\n\n\n\n(Artwork by Allison Horst)"
  }
]